// Code generated by ent, DO NOT EDIT.

package rent591home

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/programzheng/rent-house-crawler/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldTitle, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldType, v))
}

// PostID applies equality check predicate on the "post_id" field. It's identical to PostIDEQ.
func PostID(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPostID, v))
}

// KindName applies equality check predicate on the "kind_name" field. It's identical to KindNameEQ.
func KindName(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldKindName, v))
}

// RoomStr applies equality check predicate on the "room_str" field. It's identical to RoomStrEQ.
func RoomStr(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRoomStr, v))
}

// FloorStr applies equality check predicate on the "floor_str" field. It's identical to FloorStrEQ.
func FloorStr(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldFloorStr, v))
}

// Community applies equality check predicate on the "community" field. It's identical to CommunityEQ.
func Community(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCommunity, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPrice, v))
}

// PriceUnit applies equality check predicate on the "price_unit" field. It's identical to PriceUnitEQ.
func PriceUnit(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPriceUnit, v))
}

// RegionName applies equality check predicate on the "region_name" field. It's identical to RegionNameEQ.
func RegionName(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRegionName, v))
}

// SectionName applies equality check predicate on the "section_name" field. It's identical to SectionNameEQ.
func SectionName(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldSectionName, v))
}

// StreetName applies equality check predicate on the "street_name" field. It's identical to StreetNameEQ.
func StreetName(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldStreetName, v))
}

// Location applies equality check predicate on the "location" field. It's identical to LocationEQ.
func Location(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldLocation, v))
}

// Area applies equality check predicate on the "area" field. It's identical to AreaEQ.
func Area(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldArea, v))
}

// RoleName applies equality check predicate on the "role_name" field. It's identical to RoleNameEQ.
func RoleName(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRoleName, v))
}

// Contact applies equality check predicate on the "contact" field. It's identical to ContactEQ.
func Contact(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldContact, v))
}

// RefreshTime applies equality check predicate on the "refresh_time" field. It's identical to RefreshTimeEQ.
func RefreshTime(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRefreshTime, v))
}

// YesterdayHit applies equality check predicate on the "yesterday_hit" field. It's identical to YesterdayHitEQ.
func YesterdayHit(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldYesterdayHit, v))
}

// IsVip applies equality check predicate on the "is_vip" field. It's identical to IsVipEQ.
func IsVip(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsVip, v))
}

// IsCombine applies equality check predicate on the "is_combine" field. It's identical to IsCombineEQ.
func IsCombine(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsCombine, v))
}

// Hurry applies equality check predicate on the "hurry" field. It's identical to HurryEQ.
func Hurry(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldHurry, v))
}

// IsSocial applies equality check predicate on the "is_social" field. It's identical to IsSocialEQ.
func IsSocial(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsSocial, v))
}

// DiscountPriceStr applies equality check predicate on the "discount_price_str" field. It's identical to DiscountPriceStrEQ.
func DiscountPriceStr(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldDiscountPriceStr, v))
}

// CasesID applies equality check predicate on the "cases_id" field. It's identical to CasesIDEQ.
func CasesID(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCasesID, v))
}

// IsVideo applies equality check predicate on the "is_video" field. It's identical to IsVideoEQ.
func IsVideo(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsVideo, v))
}

// Preferred applies equality check predicate on the "preferred" field. It's identical to PreferredEQ.
func Preferred(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPreferred, v))
}

// Cid applies equality check predicate on the "cid" field. It's identical to CidEQ.
func Cid(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCid, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldUpdatedAt, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldTitle, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldType, v))
}

// PostIDEQ applies the EQ predicate on the "post_id" field.
func PostIDEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPostID, v))
}

// PostIDNEQ applies the NEQ predicate on the "post_id" field.
func PostIDNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldPostID, v))
}

// PostIDIn applies the In predicate on the "post_id" field.
func PostIDIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldPostID, vs...))
}

// PostIDNotIn applies the NotIn predicate on the "post_id" field.
func PostIDNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldPostID, vs...))
}

// PostIDGT applies the GT predicate on the "post_id" field.
func PostIDGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldPostID, v))
}

// PostIDGTE applies the GTE predicate on the "post_id" field.
func PostIDGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldPostID, v))
}

// PostIDLT applies the LT predicate on the "post_id" field.
func PostIDLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldPostID, v))
}

// PostIDLTE applies the LTE predicate on the "post_id" field.
func PostIDLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldPostID, v))
}

// KindNameEQ applies the EQ predicate on the "kind_name" field.
func KindNameEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldKindName, v))
}

// KindNameNEQ applies the NEQ predicate on the "kind_name" field.
func KindNameNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldKindName, v))
}

// KindNameIn applies the In predicate on the "kind_name" field.
func KindNameIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldKindName, vs...))
}

// KindNameNotIn applies the NotIn predicate on the "kind_name" field.
func KindNameNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldKindName, vs...))
}

// KindNameGT applies the GT predicate on the "kind_name" field.
func KindNameGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldKindName, v))
}

// KindNameGTE applies the GTE predicate on the "kind_name" field.
func KindNameGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldKindName, v))
}

// KindNameLT applies the LT predicate on the "kind_name" field.
func KindNameLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldKindName, v))
}

// KindNameLTE applies the LTE predicate on the "kind_name" field.
func KindNameLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldKindName, v))
}

// KindNameContains applies the Contains predicate on the "kind_name" field.
func KindNameContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldKindName, v))
}

// KindNameHasPrefix applies the HasPrefix predicate on the "kind_name" field.
func KindNameHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldKindName, v))
}

// KindNameHasSuffix applies the HasSuffix predicate on the "kind_name" field.
func KindNameHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldKindName, v))
}

// KindNameEqualFold applies the EqualFold predicate on the "kind_name" field.
func KindNameEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldKindName, v))
}

// KindNameContainsFold applies the ContainsFold predicate on the "kind_name" field.
func KindNameContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldKindName, v))
}

// RoomStrEQ applies the EQ predicate on the "room_str" field.
func RoomStrEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRoomStr, v))
}

// RoomStrNEQ applies the NEQ predicate on the "room_str" field.
func RoomStrNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldRoomStr, v))
}

// RoomStrIn applies the In predicate on the "room_str" field.
func RoomStrIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldRoomStr, vs...))
}

// RoomStrNotIn applies the NotIn predicate on the "room_str" field.
func RoomStrNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldRoomStr, vs...))
}

// RoomStrGT applies the GT predicate on the "room_str" field.
func RoomStrGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldRoomStr, v))
}

// RoomStrGTE applies the GTE predicate on the "room_str" field.
func RoomStrGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldRoomStr, v))
}

// RoomStrLT applies the LT predicate on the "room_str" field.
func RoomStrLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldRoomStr, v))
}

// RoomStrLTE applies the LTE predicate on the "room_str" field.
func RoomStrLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldRoomStr, v))
}

// RoomStrContains applies the Contains predicate on the "room_str" field.
func RoomStrContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldRoomStr, v))
}

// RoomStrHasPrefix applies the HasPrefix predicate on the "room_str" field.
func RoomStrHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldRoomStr, v))
}

// RoomStrHasSuffix applies the HasSuffix predicate on the "room_str" field.
func RoomStrHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldRoomStr, v))
}

// RoomStrEqualFold applies the EqualFold predicate on the "room_str" field.
func RoomStrEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldRoomStr, v))
}

// RoomStrContainsFold applies the ContainsFold predicate on the "room_str" field.
func RoomStrContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldRoomStr, v))
}

// FloorStrEQ applies the EQ predicate on the "floor_str" field.
func FloorStrEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldFloorStr, v))
}

// FloorStrNEQ applies the NEQ predicate on the "floor_str" field.
func FloorStrNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldFloorStr, v))
}

// FloorStrIn applies the In predicate on the "floor_str" field.
func FloorStrIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldFloorStr, vs...))
}

// FloorStrNotIn applies the NotIn predicate on the "floor_str" field.
func FloorStrNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldFloorStr, vs...))
}

// FloorStrGT applies the GT predicate on the "floor_str" field.
func FloorStrGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldFloorStr, v))
}

// FloorStrGTE applies the GTE predicate on the "floor_str" field.
func FloorStrGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldFloorStr, v))
}

// FloorStrLT applies the LT predicate on the "floor_str" field.
func FloorStrLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldFloorStr, v))
}

// FloorStrLTE applies the LTE predicate on the "floor_str" field.
func FloorStrLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldFloorStr, v))
}

// FloorStrContains applies the Contains predicate on the "floor_str" field.
func FloorStrContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldFloorStr, v))
}

// FloorStrHasPrefix applies the HasPrefix predicate on the "floor_str" field.
func FloorStrHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldFloorStr, v))
}

// FloorStrHasSuffix applies the HasSuffix predicate on the "floor_str" field.
func FloorStrHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldFloorStr, v))
}

// FloorStrEqualFold applies the EqualFold predicate on the "floor_str" field.
func FloorStrEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldFloorStr, v))
}

// FloorStrContainsFold applies the ContainsFold predicate on the "floor_str" field.
func FloorStrContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldFloorStr, v))
}

// CommunityEQ applies the EQ predicate on the "community" field.
func CommunityEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCommunity, v))
}

// CommunityNEQ applies the NEQ predicate on the "community" field.
func CommunityNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldCommunity, v))
}

// CommunityIn applies the In predicate on the "community" field.
func CommunityIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldCommunity, vs...))
}

// CommunityNotIn applies the NotIn predicate on the "community" field.
func CommunityNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldCommunity, vs...))
}

// CommunityGT applies the GT predicate on the "community" field.
func CommunityGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldCommunity, v))
}

// CommunityGTE applies the GTE predicate on the "community" field.
func CommunityGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldCommunity, v))
}

// CommunityLT applies the LT predicate on the "community" field.
func CommunityLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldCommunity, v))
}

// CommunityLTE applies the LTE predicate on the "community" field.
func CommunityLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldCommunity, v))
}

// CommunityContains applies the Contains predicate on the "community" field.
func CommunityContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldCommunity, v))
}

// CommunityHasPrefix applies the HasPrefix predicate on the "community" field.
func CommunityHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldCommunity, v))
}

// CommunityHasSuffix applies the HasSuffix predicate on the "community" field.
func CommunityHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldCommunity, v))
}

// CommunityEqualFold applies the EqualFold predicate on the "community" field.
func CommunityEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldCommunity, v))
}

// CommunityContainsFold applies the ContainsFold predicate on the "community" field.
func CommunityContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldCommunity, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldPrice, v))
}

// PriceUnitEQ applies the EQ predicate on the "price_unit" field.
func PriceUnitEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPriceUnit, v))
}

// PriceUnitNEQ applies the NEQ predicate on the "price_unit" field.
func PriceUnitNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldPriceUnit, v))
}

// PriceUnitIn applies the In predicate on the "price_unit" field.
func PriceUnitIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldPriceUnit, vs...))
}

// PriceUnitNotIn applies the NotIn predicate on the "price_unit" field.
func PriceUnitNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldPriceUnit, vs...))
}

// PriceUnitGT applies the GT predicate on the "price_unit" field.
func PriceUnitGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldPriceUnit, v))
}

// PriceUnitGTE applies the GTE predicate on the "price_unit" field.
func PriceUnitGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldPriceUnit, v))
}

// PriceUnitLT applies the LT predicate on the "price_unit" field.
func PriceUnitLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldPriceUnit, v))
}

// PriceUnitLTE applies the LTE predicate on the "price_unit" field.
func PriceUnitLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldPriceUnit, v))
}

// PriceUnitContains applies the Contains predicate on the "price_unit" field.
func PriceUnitContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldPriceUnit, v))
}

// PriceUnitHasPrefix applies the HasPrefix predicate on the "price_unit" field.
func PriceUnitHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldPriceUnit, v))
}

// PriceUnitHasSuffix applies the HasSuffix predicate on the "price_unit" field.
func PriceUnitHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldPriceUnit, v))
}

// PriceUnitEqualFold applies the EqualFold predicate on the "price_unit" field.
func PriceUnitEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldPriceUnit, v))
}

// PriceUnitContainsFold applies the ContainsFold predicate on the "price_unit" field.
func PriceUnitContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldPriceUnit, v))
}

// PhotoListIsNil applies the IsNil predicate on the "photo_list" field.
func PhotoListIsNil() predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIsNull(FieldPhotoList))
}

// PhotoListNotNil applies the NotNil predicate on the "photo_list" field.
func PhotoListNotNil() predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotNull(FieldPhotoList))
}

// RegionNameEQ applies the EQ predicate on the "region_name" field.
func RegionNameEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRegionName, v))
}

// RegionNameNEQ applies the NEQ predicate on the "region_name" field.
func RegionNameNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldRegionName, v))
}

// RegionNameIn applies the In predicate on the "region_name" field.
func RegionNameIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldRegionName, vs...))
}

// RegionNameNotIn applies the NotIn predicate on the "region_name" field.
func RegionNameNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldRegionName, vs...))
}

// RegionNameGT applies the GT predicate on the "region_name" field.
func RegionNameGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldRegionName, v))
}

// RegionNameGTE applies the GTE predicate on the "region_name" field.
func RegionNameGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldRegionName, v))
}

// RegionNameLT applies the LT predicate on the "region_name" field.
func RegionNameLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldRegionName, v))
}

// RegionNameLTE applies the LTE predicate on the "region_name" field.
func RegionNameLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldRegionName, v))
}

// RegionNameContains applies the Contains predicate on the "region_name" field.
func RegionNameContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldRegionName, v))
}

// RegionNameHasPrefix applies the HasPrefix predicate on the "region_name" field.
func RegionNameHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldRegionName, v))
}

// RegionNameHasSuffix applies the HasSuffix predicate on the "region_name" field.
func RegionNameHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldRegionName, v))
}

// RegionNameIsNil applies the IsNil predicate on the "region_name" field.
func RegionNameIsNil() predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIsNull(FieldRegionName))
}

// RegionNameNotNil applies the NotNil predicate on the "region_name" field.
func RegionNameNotNil() predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotNull(FieldRegionName))
}

// RegionNameEqualFold applies the EqualFold predicate on the "region_name" field.
func RegionNameEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldRegionName, v))
}

// RegionNameContainsFold applies the ContainsFold predicate on the "region_name" field.
func RegionNameContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldRegionName, v))
}

// SectionNameEQ applies the EQ predicate on the "section_name" field.
func SectionNameEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldSectionName, v))
}

// SectionNameNEQ applies the NEQ predicate on the "section_name" field.
func SectionNameNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldSectionName, v))
}

// SectionNameIn applies the In predicate on the "section_name" field.
func SectionNameIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldSectionName, vs...))
}

// SectionNameNotIn applies the NotIn predicate on the "section_name" field.
func SectionNameNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldSectionName, vs...))
}

// SectionNameGT applies the GT predicate on the "section_name" field.
func SectionNameGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldSectionName, v))
}

// SectionNameGTE applies the GTE predicate on the "section_name" field.
func SectionNameGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldSectionName, v))
}

// SectionNameLT applies the LT predicate on the "section_name" field.
func SectionNameLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldSectionName, v))
}

// SectionNameLTE applies the LTE predicate on the "section_name" field.
func SectionNameLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldSectionName, v))
}

// SectionNameContains applies the Contains predicate on the "section_name" field.
func SectionNameContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldSectionName, v))
}

// SectionNameHasPrefix applies the HasPrefix predicate on the "section_name" field.
func SectionNameHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldSectionName, v))
}

// SectionNameHasSuffix applies the HasSuffix predicate on the "section_name" field.
func SectionNameHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldSectionName, v))
}

// SectionNameEqualFold applies the EqualFold predicate on the "section_name" field.
func SectionNameEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldSectionName, v))
}

// SectionNameContainsFold applies the ContainsFold predicate on the "section_name" field.
func SectionNameContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldSectionName, v))
}

// StreetNameEQ applies the EQ predicate on the "street_name" field.
func StreetNameEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldStreetName, v))
}

// StreetNameNEQ applies the NEQ predicate on the "street_name" field.
func StreetNameNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldStreetName, v))
}

// StreetNameIn applies the In predicate on the "street_name" field.
func StreetNameIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldStreetName, vs...))
}

// StreetNameNotIn applies the NotIn predicate on the "street_name" field.
func StreetNameNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldStreetName, vs...))
}

// StreetNameGT applies the GT predicate on the "street_name" field.
func StreetNameGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldStreetName, v))
}

// StreetNameGTE applies the GTE predicate on the "street_name" field.
func StreetNameGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldStreetName, v))
}

// StreetNameLT applies the LT predicate on the "street_name" field.
func StreetNameLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldStreetName, v))
}

// StreetNameLTE applies the LTE predicate on the "street_name" field.
func StreetNameLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldStreetName, v))
}

// StreetNameContains applies the Contains predicate on the "street_name" field.
func StreetNameContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldStreetName, v))
}

// StreetNameHasPrefix applies the HasPrefix predicate on the "street_name" field.
func StreetNameHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldStreetName, v))
}

// StreetNameHasSuffix applies the HasSuffix predicate on the "street_name" field.
func StreetNameHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldStreetName, v))
}

// StreetNameEqualFold applies the EqualFold predicate on the "street_name" field.
func StreetNameEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldStreetName, v))
}

// StreetNameContainsFold applies the ContainsFold predicate on the "street_name" field.
func StreetNameContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldStreetName, v))
}

// LocationEQ applies the EQ predicate on the "location" field.
func LocationEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldLocation, v))
}

// LocationNEQ applies the NEQ predicate on the "location" field.
func LocationNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldLocation, v))
}

// LocationIn applies the In predicate on the "location" field.
func LocationIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldLocation, vs...))
}

// LocationNotIn applies the NotIn predicate on the "location" field.
func LocationNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldLocation, vs...))
}

// LocationGT applies the GT predicate on the "location" field.
func LocationGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldLocation, v))
}

// LocationGTE applies the GTE predicate on the "location" field.
func LocationGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldLocation, v))
}

// LocationLT applies the LT predicate on the "location" field.
func LocationLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldLocation, v))
}

// LocationLTE applies the LTE predicate on the "location" field.
func LocationLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldLocation, v))
}

// LocationContains applies the Contains predicate on the "location" field.
func LocationContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldLocation, v))
}

// LocationHasPrefix applies the HasPrefix predicate on the "location" field.
func LocationHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldLocation, v))
}

// LocationHasSuffix applies the HasSuffix predicate on the "location" field.
func LocationHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldLocation, v))
}

// LocationEqualFold applies the EqualFold predicate on the "location" field.
func LocationEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldLocation, v))
}

// LocationContainsFold applies the ContainsFold predicate on the "location" field.
func LocationContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldLocation, v))
}

// AreaEQ applies the EQ predicate on the "area" field.
func AreaEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldArea, v))
}

// AreaNEQ applies the NEQ predicate on the "area" field.
func AreaNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldArea, v))
}

// AreaIn applies the In predicate on the "area" field.
func AreaIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldArea, vs...))
}

// AreaNotIn applies the NotIn predicate on the "area" field.
func AreaNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldArea, vs...))
}

// AreaGT applies the GT predicate on the "area" field.
func AreaGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldArea, v))
}

// AreaGTE applies the GTE predicate on the "area" field.
func AreaGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldArea, v))
}

// AreaLT applies the LT predicate on the "area" field.
func AreaLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldArea, v))
}

// AreaLTE applies the LTE predicate on the "area" field.
func AreaLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldArea, v))
}

// AreaContains applies the Contains predicate on the "area" field.
func AreaContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldArea, v))
}

// AreaHasPrefix applies the HasPrefix predicate on the "area" field.
func AreaHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldArea, v))
}

// AreaHasSuffix applies the HasSuffix predicate on the "area" field.
func AreaHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldArea, v))
}

// AreaEqualFold applies the EqualFold predicate on the "area" field.
func AreaEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldArea, v))
}

// AreaContainsFold applies the ContainsFold predicate on the "area" field.
func AreaContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldArea, v))
}

// RoleNameEQ applies the EQ predicate on the "role_name" field.
func RoleNameEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRoleName, v))
}

// RoleNameNEQ applies the NEQ predicate on the "role_name" field.
func RoleNameNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldRoleName, v))
}

// RoleNameIn applies the In predicate on the "role_name" field.
func RoleNameIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldRoleName, vs...))
}

// RoleNameNotIn applies the NotIn predicate on the "role_name" field.
func RoleNameNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldRoleName, vs...))
}

// RoleNameGT applies the GT predicate on the "role_name" field.
func RoleNameGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldRoleName, v))
}

// RoleNameGTE applies the GTE predicate on the "role_name" field.
func RoleNameGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldRoleName, v))
}

// RoleNameLT applies the LT predicate on the "role_name" field.
func RoleNameLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldRoleName, v))
}

// RoleNameLTE applies the LTE predicate on the "role_name" field.
func RoleNameLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldRoleName, v))
}

// RoleNameContains applies the Contains predicate on the "role_name" field.
func RoleNameContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldRoleName, v))
}

// RoleNameHasPrefix applies the HasPrefix predicate on the "role_name" field.
func RoleNameHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldRoleName, v))
}

// RoleNameHasSuffix applies the HasSuffix predicate on the "role_name" field.
func RoleNameHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldRoleName, v))
}

// RoleNameEqualFold applies the EqualFold predicate on the "role_name" field.
func RoleNameEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldRoleName, v))
}

// RoleNameContainsFold applies the ContainsFold predicate on the "role_name" field.
func RoleNameContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldRoleName, v))
}

// ContactEQ applies the EQ predicate on the "contact" field.
func ContactEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldContact, v))
}

// ContactNEQ applies the NEQ predicate on the "contact" field.
func ContactNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldContact, v))
}

// ContactIn applies the In predicate on the "contact" field.
func ContactIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldContact, vs...))
}

// ContactNotIn applies the NotIn predicate on the "contact" field.
func ContactNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldContact, vs...))
}

// ContactGT applies the GT predicate on the "contact" field.
func ContactGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldContact, v))
}

// ContactGTE applies the GTE predicate on the "contact" field.
func ContactGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldContact, v))
}

// ContactLT applies the LT predicate on the "contact" field.
func ContactLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldContact, v))
}

// ContactLTE applies the LTE predicate on the "contact" field.
func ContactLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldContact, v))
}

// ContactContains applies the Contains predicate on the "contact" field.
func ContactContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldContact, v))
}

// ContactHasPrefix applies the HasPrefix predicate on the "contact" field.
func ContactHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldContact, v))
}

// ContactHasSuffix applies the HasSuffix predicate on the "contact" field.
func ContactHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldContact, v))
}

// ContactEqualFold applies the EqualFold predicate on the "contact" field.
func ContactEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldContact, v))
}

// ContactContainsFold applies the ContainsFold predicate on the "contact" field.
func ContactContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldContact, v))
}

// RefreshTimeEQ applies the EQ predicate on the "refresh_time" field.
func RefreshTimeEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldRefreshTime, v))
}

// RefreshTimeNEQ applies the NEQ predicate on the "refresh_time" field.
func RefreshTimeNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldRefreshTime, v))
}

// RefreshTimeIn applies the In predicate on the "refresh_time" field.
func RefreshTimeIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldRefreshTime, vs...))
}

// RefreshTimeNotIn applies the NotIn predicate on the "refresh_time" field.
func RefreshTimeNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldRefreshTime, vs...))
}

// RefreshTimeGT applies the GT predicate on the "refresh_time" field.
func RefreshTimeGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldRefreshTime, v))
}

// RefreshTimeGTE applies the GTE predicate on the "refresh_time" field.
func RefreshTimeGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldRefreshTime, v))
}

// RefreshTimeLT applies the LT predicate on the "refresh_time" field.
func RefreshTimeLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldRefreshTime, v))
}

// RefreshTimeLTE applies the LTE predicate on the "refresh_time" field.
func RefreshTimeLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldRefreshTime, v))
}

// RefreshTimeContains applies the Contains predicate on the "refresh_time" field.
func RefreshTimeContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldRefreshTime, v))
}

// RefreshTimeHasPrefix applies the HasPrefix predicate on the "refresh_time" field.
func RefreshTimeHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldRefreshTime, v))
}

// RefreshTimeHasSuffix applies the HasSuffix predicate on the "refresh_time" field.
func RefreshTimeHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldRefreshTime, v))
}

// RefreshTimeEqualFold applies the EqualFold predicate on the "refresh_time" field.
func RefreshTimeEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldRefreshTime, v))
}

// RefreshTimeContainsFold applies the ContainsFold predicate on the "refresh_time" field.
func RefreshTimeContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldRefreshTime, v))
}

// YesterdayHitEQ applies the EQ predicate on the "yesterday_hit" field.
func YesterdayHitEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldYesterdayHit, v))
}

// YesterdayHitNEQ applies the NEQ predicate on the "yesterday_hit" field.
func YesterdayHitNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldYesterdayHit, v))
}

// YesterdayHitIn applies the In predicate on the "yesterday_hit" field.
func YesterdayHitIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldYesterdayHit, vs...))
}

// YesterdayHitNotIn applies the NotIn predicate on the "yesterday_hit" field.
func YesterdayHitNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldYesterdayHit, vs...))
}

// YesterdayHitGT applies the GT predicate on the "yesterday_hit" field.
func YesterdayHitGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldYesterdayHit, v))
}

// YesterdayHitGTE applies the GTE predicate on the "yesterday_hit" field.
func YesterdayHitGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldYesterdayHit, v))
}

// YesterdayHitLT applies the LT predicate on the "yesterday_hit" field.
func YesterdayHitLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldYesterdayHit, v))
}

// YesterdayHitLTE applies the LTE predicate on the "yesterday_hit" field.
func YesterdayHitLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldYesterdayHit, v))
}

// IsVipEQ applies the EQ predicate on the "is_vip" field.
func IsVipEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsVip, v))
}

// IsVipNEQ applies the NEQ predicate on the "is_vip" field.
func IsVipNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldIsVip, v))
}

// IsVipIn applies the In predicate on the "is_vip" field.
func IsVipIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldIsVip, vs...))
}

// IsVipNotIn applies the NotIn predicate on the "is_vip" field.
func IsVipNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldIsVip, vs...))
}

// IsVipGT applies the GT predicate on the "is_vip" field.
func IsVipGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldIsVip, v))
}

// IsVipGTE applies the GTE predicate on the "is_vip" field.
func IsVipGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldIsVip, v))
}

// IsVipLT applies the LT predicate on the "is_vip" field.
func IsVipLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldIsVip, v))
}

// IsVipLTE applies the LTE predicate on the "is_vip" field.
func IsVipLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldIsVip, v))
}

// IsCombineEQ applies the EQ predicate on the "is_combine" field.
func IsCombineEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsCombine, v))
}

// IsCombineNEQ applies the NEQ predicate on the "is_combine" field.
func IsCombineNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldIsCombine, v))
}

// IsCombineIn applies the In predicate on the "is_combine" field.
func IsCombineIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldIsCombine, vs...))
}

// IsCombineNotIn applies the NotIn predicate on the "is_combine" field.
func IsCombineNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldIsCombine, vs...))
}

// IsCombineGT applies the GT predicate on the "is_combine" field.
func IsCombineGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldIsCombine, v))
}

// IsCombineGTE applies the GTE predicate on the "is_combine" field.
func IsCombineGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldIsCombine, v))
}

// IsCombineLT applies the LT predicate on the "is_combine" field.
func IsCombineLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldIsCombine, v))
}

// IsCombineLTE applies the LTE predicate on the "is_combine" field.
func IsCombineLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldIsCombine, v))
}

// HurryEQ applies the EQ predicate on the "hurry" field.
func HurryEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldHurry, v))
}

// HurryNEQ applies the NEQ predicate on the "hurry" field.
func HurryNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldHurry, v))
}

// HurryIn applies the In predicate on the "hurry" field.
func HurryIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldHurry, vs...))
}

// HurryNotIn applies the NotIn predicate on the "hurry" field.
func HurryNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldHurry, vs...))
}

// HurryGT applies the GT predicate on the "hurry" field.
func HurryGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldHurry, v))
}

// HurryGTE applies the GTE predicate on the "hurry" field.
func HurryGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldHurry, v))
}

// HurryLT applies the LT predicate on the "hurry" field.
func HurryLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldHurry, v))
}

// HurryLTE applies the LTE predicate on the "hurry" field.
func HurryLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldHurry, v))
}

// IsSocialEQ applies the EQ predicate on the "is_social" field.
func IsSocialEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsSocial, v))
}

// IsSocialNEQ applies the NEQ predicate on the "is_social" field.
func IsSocialNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldIsSocial, v))
}

// IsSocialIn applies the In predicate on the "is_social" field.
func IsSocialIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldIsSocial, vs...))
}

// IsSocialNotIn applies the NotIn predicate on the "is_social" field.
func IsSocialNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldIsSocial, vs...))
}

// IsSocialGT applies the GT predicate on the "is_social" field.
func IsSocialGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldIsSocial, v))
}

// IsSocialGTE applies the GTE predicate on the "is_social" field.
func IsSocialGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldIsSocial, v))
}

// IsSocialLT applies the LT predicate on the "is_social" field.
func IsSocialLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldIsSocial, v))
}

// IsSocialLTE applies the LTE predicate on the "is_social" field.
func IsSocialLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldIsSocial, v))
}

// DiscountPriceStrEQ applies the EQ predicate on the "discount_price_str" field.
func DiscountPriceStrEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldDiscountPriceStr, v))
}

// DiscountPriceStrNEQ applies the NEQ predicate on the "discount_price_str" field.
func DiscountPriceStrNEQ(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldDiscountPriceStr, v))
}

// DiscountPriceStrIn applies the In predicate on the "discount_price_str" field.
func DiscountPriceStrIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldDiscountPriceStr, vs...))
}

// DiscountPriceStrNotIn applies the NotIn predicate on the "discount_price_str" field.
func DiscountPriceStrNotIn(vs ...string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldDiscountPriceStr, vs...))
}

// DiscountPriceStrGT applies the GT predicate on the "discount_price_str" field.
func DiscountPriceStrGT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldDiscountPriceStr, v))
}

// DiscountPriceStrGTE applies the GTE predicate on the "discount_price_str" field.
func DiscountPriceStrGTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldDiscountPriceStr, v))
}

// DiscountPriceStrLT applies the LT predicate on the "discount_price_str" field.
func DiscountPriceStrLT(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldDiscountPriceStr, v))
}

// DiscountPriceStrLTE applies the LTE predicate on the "discount_price_str" field.
func DiscountPriceStrLTE(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldDiscountPriceStr, v))
}

// DiscountPriceStrContains applies the Contains predicate on the "discount_price_str" field.
func DiscountPriceStrContains(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContains(FieldDiscountPriceStr, v))
}

// DiscountPriceStrHasPrefix applies the HasPrefix predicate on the "discount_price_str" field.
func DiscountPriceStrHasPrefix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasPrefix(FieldDiscountPriceStr, v))
}

// DiscountPriceStrHasSuffix applies the HasSuffix predicate on the "discount_price_str" field.
func DiscountPriceStrHasSuffix(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldHasSuffix(FieldDiscountPriceStr, v))
}

// DiscountPriceStrEqualFold applies the EqualFold predicate on the "discount_price_str" field.
func DiscountPriceStrEqualFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEqualFold(FieldDiscountPriceStr, v))
}

// DiscountPriceStrContainsFold applies the ContainsFold predicate on the "discount_price_str" field.
func DiscountPriceStrContainsFold(v string) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldContainsFold(FieldDiscountPriceStr, v))
}

// CasesIDEQ applies the EQ predicate on the "cases_id" field.
func CasesIDEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCasesID, v))
}

// CasesIDNEQ applies the NEQ predicate on the "cases_id" field.
func CasesIDNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldCasesID, v))
}

// CasesIDIn applies the In predicate on the "cases_id" field.
func CasesIDIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldCasesID, vs...))
}

// CasesIDNotIn applies the NotIn predicate on the "cases_id" field.
func CasesIDNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldCasesID, vs...))
}

// CasesIDGT applies the GT predicate on the "cases_id" field.
func CasesIDGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldCasesID, v))
}

// CasesIDGTE applies the GTE predicate on the "cases_id" field.
func CasesIDGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldCasesID, v))
}

// CasesIDLT applies the LT predicate on the "cases_id" field.
func CasesIDLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldCasesID, v))
}

// CasesIDLTE applies the LTE predicate on the "cases_id" field.
func CasesIDLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldCasesID, v))
}

// IsVideoEQ applies the EQ predicate on the "is_video" field.
func IsVideoEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldIsVideo, v))
}

// IsVideoNEQ applies the NEQ predicate on the "is_video" field.
func IsVideoNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldIsVideo, v))
}

// IsVideoIn applies the In predicate on the "is_video" field.
func IsVideoIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldIsVideo, vs...))
}

// IsVideoNotIn applies the NotIn predicate on the "is_video" field.
func IsVideoNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldIsVideo, vs...))
}

// IsVideoGT applies the GT predicate on the "is_video" field.
func IsVideoGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldIsVideo, v))
}

// IsVideoGTE applies the GTE predicate on the "is_video" field.
func IsVideoGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldIsVideo, v))
}

// IsVideoLT applies the LT predicate on the "is_video" field.
func IsVideoLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldIsVideo, v))
}

// IsVideoLTE applies the LTE predicate on the "is_video" field.
func IsVideoLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldIsVideo, v))
}

// PreferredEQ applies the EQ predicate on the "preferred" field.
func PreferredEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldPreferred, v))
}

// PreferredNEQ applies the NEQ predicate on the "preferred" field.
func PreferredNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldPreferred, v))
}

// PreferredIn applies the In predicate on the "preferred" field.
func PreferredIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldPreferred, vs...))
}

// PreferredNotIn applies the NotIn predicate on the "preferred" field.
func PreferredNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldPreferred, vs...))
}

// PreferredGT applies the GT predicate on the "preferred" field.
func PreferredGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldPreferred, v))
}

// PreferredGTE applies the GTE predicate on the "preferred" field.
func PreferredGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldPreferred, v))
}

// PreferredLT applies the LT predicate on the "preferred" field.
func PreferredLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldPreferred, v))
}

// PreferredLTE applies the LTE predicate on the "preferred" field.
func PreferredLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldPreferred, v))
}

// CidEQ applies the EQ predicate on the "cid" field.
func CidEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCid, v))
}

// CidNEQ applies the NEQ predicate on the "cid" field.
func CidNEQ(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldCid, v))
}

// CidIn applies the In predicate on the "cid" field.
func CidIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldCid, vs...))
}

// CidNotIn applies the NotIn predicate on the "cid" field.
func CidNotIn(vs ...int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldCid, vs...))
}

// CidGT applies the GT predicate on the "cid" field.
func CidGT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldCid, v))
}

// CidGTE applies the GTE predicate on the "cid" field.
func CidGTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldCid, v))
}

// CidLT applies the LT predicate on the "cid" field.
func CidLT(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldCid, v))
}

// CidLTE applies the LTE predicate on the "cid" field.
func CidLTE(v int) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldCid, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Rent591Home {
	return predicate.Rent591Home(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasRent591homeTags applies the HasEdge predicate on the "rent591home_tags" edge.
func HasRent591homeTags() predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeTagsTable, Rent591homeTagsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeTagsWith applies the HasEdge predicate on the "rent591home_tags" edge with a given conditions (other predicates).
func HasRent591homeTagsWith(preds ...predicate.Rent591HomeTag) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := newRent591homeTagsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeSurroundings applies the HasEdge predicate on the "rent591home_surroundings" edge.
func HasRent591homeSurroundings() predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, Rent591homeSurroundingsTable, Rent591homeSurroundingsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeSurroundingsWith applies the HasEdge predicate on the "rent591home_surroundings" edge with a given conditions (other predicates).
func HasRent591homeSurroundingsWith(preds ...predicate.Rent591HomeSurrounding) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := newRent591homeSurroundingsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetails applies the HasEdge predicate on the "rent591home_details" edge.
func HasRent591homeDetails() predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, Rent591homeDetailsTable, Rent591homeDetailsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailsWith applies the HasEdge predicate on the "rent591home_details" edge with a given conditions (other predicates).
func HasRent591homeDetailsWith(preds ...predicate.Rent591HomeDetail) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		step := newRent591homeDetailsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Rent591Home) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Rent591Home) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Rent591Home) predicate.Rent591Home {
	return predicate.Rent591Home(func(s *sql.Selector) {
		p(s.Not())
	})
}
