// Code generated by ent, DO NOT EDIT.

package rent591homedetail

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/programzheng/rent-house-crawler/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldID, id))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldTitle, v))
}

// Deposit applies equality check predicate on the "deposit" field. It's identical to DepositEQ.
func Deposit(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDeposit, v))
}

// Kind applies equality check predicate on the "kind" field. It's identical to KindEQ.
func Kind(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldKind, v))
}

// Relieved applies equality check predicate on the "relieved" field. It's identical to RelievedEQ.
func Relieved(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldRelieved, v))
}

// RegionID applies equality check predicate on the "region_id" field. It's identical to RegionIDEQ.
func RegionID(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldRegionID, v))
}

// SectionID applies equality check predicate on the "section_id" field. It's identical to SectionIDEQ.
func SectionID(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldSectionID, v))
}

// DealText applies equality check predicate on the "deal_text" field. It's identical to DealTextEQ.
func DealText(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDealText, v))
}

// DealTime applies equality check predicate on the "deal_time" field. It's identical to DealTimeEQ.
func DealTime(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDealTime, v))
}

// Price applies equality check predicate on the "price" field. It's identical to PriceEQ.
func Price(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldPrice, v))
}

// PriceUnit applies equality check predicate on the "price_unit" field. It's identical to PriceUnitEQ.
func PriceUnit(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldPriceUnit, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldUpdatedAt, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContainsFold(FieldTitle, v))
}

// DepositEQ applies the EQ predicate on the "deposit" field.
func DepositEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDeposit, v))
}

// DepositNEQ applies the NEQ predicate on the "deposit" field.
func DepositNEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldDeposit, v))
}

// DepositIn applies the In predicate on the "deposit" field.
func DepositIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldDeposit, vs...))
}

// DepositNotIn applies the NotIn predicate on the "deposit" field.
func DepositNotIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldDeposit, vs...))
}

// DepositGT applies the GT predicate on the "deposit" field.
func DepositGT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldDeposit, v))
}

// DepositGTE applies the GTE predicate on the "deposit" field.
func DepositGTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldDeposit, v))
}

// DepositLT applies the LT predicate on the "deposit" field.
func DepositLT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldDeposit, v))
}

// DepositLTE applies the LTE predicate on the "deposit" field.
func DepositLTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldDeposit, v))
}

// DepositContains applies the Contains predicate on the "deposit" field.
func DepositContains(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContains(FieldDeposit, v))
}

// DepositHasPrefix applies the HasPrefix predicate on the "deposit" field.
func DepositHasPrefix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasPrefix(FieldDeposit, v))
}

// DepositHasSuffix applies the HasSuffix predicate on the "deposit" field.
func DepositHasSuffix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasSuffix(FieldDeposit, v))
}

// DepositEqualFold applies the EqualFold predicate on the "deposit" field.
func DepositEqualFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEqualFold(FieldDeposit, v))
}

// DepositContainsFold applies the ContainsFold predicate on the "deposit" field.
func DepositContainsFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContainsFold(FieldDeposit, v))
}

// KindEQ applies the EQ predicate on the "kind" field.
func KindEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldKind, v))
}

// KindNEQ applies the NEQ predicate on the "kind" field.
func KindNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldKind, v))
}

// KindIn applies the In predicate on the "kind" field.
func KindIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldKind, vs...))
}

// KindNotIn applies the NotIn predicate on the "kind" field.
func KindNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldKind, vs...))
}

// KindGT applies the GT predicate on the "kind" field.
func KindGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldKind, v))
}

// KindGTE applies the GTE predicate on the "kind" field.
func KindGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldKind, v))
}

// KindLT applies the LT predicate on the "kind" field.
func KindLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldKind, v))
}

// KindLTE applies the LTE predicate on the "kind" field.
func KindLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldKind, v))
}

// RelievedEQ applies the EQ predicate on the "relieved" field.
func RelievedEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldRelieved, v))
}

// RelievedNEQ applies the NEQ predicate on the "relieved" field.
func RelievedNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldRelieved, v))
}

// RelievedIn applies the In predicate on the "relieved" field.
func RelievedIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldRelieved, vs...))
}

// RelievedNotIn applies the NotIn predicate on the "relieved" field.
func RelievedNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldRelieved, vs...))
}

// RelievedGT applies the GT predicate on the "relieved" field.
func RelievedGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldRelieved, v))
}

// RelievedGTE applies the GTE predicate on the "relieved" field.
func RelievedGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldRelieved, v))
}

// RelievedLT applies the LT predicate on the "relieved" field.
func RelievedLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldRelieved, v))
}

// RelievedLTE applies the LTE predicate on the "relieved" field.
func RelievedLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldRelieved, v))
}

// RegionIDEQ applies the EQ predicate on the "region_id" field.
func RegionIDEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldRegionID, v))
}

// RegionIDNEQ applies the NEQ predicate on the "region_id" field.
func RegionIDNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldRegionID, v))
}

// RegionIDIn applies the In predicate on the "region_id" field.
func RegionIDIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldRegionID, vs...))
}

// RegionIDNotIn applies the NotIn predicate on the "region_id" field.
func RegionIDNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldRegionID, vs...))
}

// RegionIDGT applies the GT predicate on the "region_id" field.
func RegionIDGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldRegionID, v))
}

// RegionIDGTE applies the GTE predicate on the "region_id" field.
func RegionIDGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldRegionID, v))
}

// RegionIDLT applies the LT predicate on the "region_id" field.
func RegionIDLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldRegionID, v))
}

// RegionIDLTE applies the LTE predicate on the "region_id" field.
func RegionIDLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldRegionID, v))
}

// SectionIDEQ applies the EQ predicate on the "section_id" field.
func SectionIDEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldSectionID, v))
}

// SectionIDNEQ applies the NEQ predicate on the "section_id" field.
func SectionIDNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldSectionID, v))
}

// SectionIDIn applies the In predicate on the "section_id" field.
func SectionIDIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldSectionID, vs...))
}

// SectionIDNotIn applies the NotIn predicate on the "section_id" field.
func SectionIDNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldSectionID, vs...))
}

// SectionIDGT applies the GT predicate on the "section_id" field.
func SectionIDGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldSectionID, v))
}

// SectionIDGTE applies the GTE predicate on the "section_id" field.
func SectionIDGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldSectionID, v))
}

// SectionIDLT applies the LT predicate on the "section_id" field.
func SectionIDLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldSectionID, v))
}

// SectionIDLTE applies the LTE predicate on the "section_id" field.
func SectionIDLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldSectionID, v))
}

// DealTextEQ applies the EQ predicate on the "deal_text" field.
func DealTextEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDealText, v))
}

// DealTextNEQ applies the NEQ predicate on the "deal_text" field.
func DealTextNEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldDealText, v))
}

// DealTextIn applies the In predicate on the "deal_text" field.
func DealTextIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldDealText, vs...))
}

// DealTextNotIn applies the NotIn predicate on the "deal_text" field.
func DealTextNotIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldDealText, vs...))
}

// DealTextGT applies the GT predicate on the "deal_text" field.
func DealTextGT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldDealText, v))
}

// DealTextGTE applies the GTE predicate on the "deal_text" field.
func DealTextGTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldDealText, v))
}

// DealTextLT applies the LT predicate on the "deal_text" field.
func DealTextLT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldDealText, v))
}

// DealTextLTE applies the LTE predicate on the "deal_text" field.
func DealTextLTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldDealText, v))
}

// DealTextContains applies the Contains predicate on the "deal_text" field.
func DealTextContains(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContains(FieldDealText, v))
}

// DealTextHasPrefix applies the HasPrefix predicate on the "deal_text" field.
func DealTextHasPrefix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasPrefix(FieldDealText, v))
}

// DealTextHasSuffix applies the HasSuffix predicate on the "deal_text" field.
func DealTextHasSuffix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasSuffix(FieldDealText, v))
}

// DealTextIsNil applies the IsNil predicate on the "deal_text" field.
func DealTextIsNil() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIsNull(FieldDealText))
}

// DealTextNotNil applies the NotNil predicate on the "deal_text" field.
func DealTextNotNil() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotNull(FieldDealText))
}

// DealTextEqualFold applies the EqualFold predicate on the "deal_text" field.
func DealTextEqualFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEqualFold(FieldDealText, v))
}

// DealTextContainsFold applies the ContainsFold predicate on the "deal_text" field.
func DealTextContainsFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContainsFold(FieldDealText, v))
}

// DealTimeEQ applies the EQ predicate on the "deal_time" field.
func DealTimeEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldDealTime, v))
}

// DealTimeNEQ applies the NEQ predicate on the "deal_time" field.
func DealTimeNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldDealTime, v))
}

// DealTimeIn applies the In predicate on the "deal_time" field.
func DealTimeIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldDealTime, vs...))
}

// DealTimeNotIn applies the NotIn predicate on the "deal_time" field.
func DealTimeNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldDealTime, vs...))
}

// DealTimeGT applies the GT predicate on the "deal_time" field.
func DealTimeGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldDealTime, v))
}

// DealTimeGTE applies the GTE predicate on the "deal_time" field.
func DealTimeGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldDealTime, v))
}

// DealTimeLT applies the LT predicate on the "deal_time" field.
func DealTimeLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldDealTime, v))
}

// DealTimeLTE applies the LTE predicate on the "deal_time" field.
func DealTimeLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldDealTime, v))
}

// PriceEQ applies the EQ predicate on the "price" field.
func PriceEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldPrice, v))
}

// PriceNEQ applies the NEQ predicate on the "price" field.
func PriceNEQ(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldPrice, v))
}

// PriceIn applies the In predicate on the "price" field.
func PriceIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldPrice, vs...))
}

// PriceNotIn applies the NotIn predicate on the "price" field.
func PriceNotIn(vs ...int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldPrice, vs...))
}

// PriceGT applies the GT predicate on the "price" field.
func PriceGT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldPrice, v))
}

// PriceGTE applies the GTE predicate on the "price" field.
func PriceGTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldPrice, v))
}

// PriceLT applies the LT predicate on the "price" field.
func PriceLT(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldPrice, v))
}

// PriceLTE applies the LTE predicate on the "price" field.
func PriceLTE(v int) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldPrice, v))
}

// PriceUnitEQ applies the EQ predicate on the "price_unit" field.
func PriceUnitEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldPriceUnit, v))
}

// PriceUnitNEQ applies the NEQ predicate on the "price_unit" field.
func PriceUnitNEQ(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldPriceUnit, v))
}

// PriceUnitIn applies the In predicate on the "price_unit" field.
func PriceUnitIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldPriceUnit, vs...))
}

// PriceUnitNotIn applies the NotIn predicate on the "price_unit" field.
func PriceUnitNotIn(vs ...string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldPriceUnit, vs...))
}

// PriceUnitGT applies the GT predicate on the "price_unit" field.
func PriceUnitGT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldPriceUnit, v))
}

// PriceUnitGTE applies the GTE predicate on the "price_unit" field.
func PriceUnitGTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldPriceUnit, v))
}

// PriceUnitLT applies the LT predicate on the "price_unit" field.
func PriceUnitLT(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldPriceUnit, v))
}

// PriceUnitLTE applies the LTE predicate on the "price_unit" field.
func PriceUnitLTE(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldPriceUnit, v))
}

// PriceUnitContains applies the Contains predicate on the "price_unit" field.
func PriceUnitContains(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContains(FieldPriceUnit, v))
}

// PriceUnitHasPrefix applies the HasPrefix predicate on the "price_unit" field.
func PriceUnitHasPrefix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasPrefix(FieldPriceUnit, v))
}

// PriceUnitHasSuffix applies the HasSuffix predicate on the "price_unit" field.
func PriceUnitHasSuffix(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldHasSuffix(FieldPriceUnit, v))
}

// PriceUnitEqualFold applies the EqualFold predicate on the "price_unit" field.
func PriceUnitEqualFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEqualFold(FieldPriceUnit, v))
}

// PriceUnitContainsFold applies the ContainsFold predicate on the "price_unit" field.
func PriceUnitContainsFold(v string) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldContainsFold(FieldPriceUnit, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasRent591homes applies the HasEdge predicate on the "rent591homes" edge.
func HasRent591homes() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, Rent591homesTable, Rent591homesColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homesWith applies the HasEdge predicate on the "rent591homes" edge with a given conditions (other predicates).
func HasRent591homesWith(preds ...predicate.Rent591Home) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailBreadcrumbs applies the HasEdge predicate on the "rent591home_detail_breadcrumbs" edge.
func HasRent591homeDetailBreadcrumbs() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailBreadcrumbsTable, Rent591homeDetailBreadcrumbsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailBreadcrumbsWith applies the HasEdge predicate on the "rent591home_detail_breadcrumbs" edge with a given conditions (other predicates).
func HasRent591homeDetailBreadcrumbsWith(preds ...predicate.Rent591HomeDetailBreadcrumb) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailBreadcrumbsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailShareinfos applies the HasEdge predicate on the "rent591home_detail_shareinfos" edge.
func HasRent591homeDetailShareinfos() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailShareinfosTable, Rent591homeDetailShareinfosPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailShareinfosWith applies the HasEdge predicate on the "rent591home_detail_shareinfos" edge with a given conditions (other predicates).
func HasRent591homeDetailShareinfosWith(preds ...predicate.Rent591HomeDetailShareInfo) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailShareinfosStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailBrowses applies the HasEdge predicate on the "rent591home_detail_browses" edge.
func HasRent591homeDetailBrowses() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailBrowsesTable, Rent591homeDetailBrowsesPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailBrowsesWith applies the HasEdge predicate on the "rent591home_detail_browses" edge with a given conditions (other predicates).
func HasRent591homeDetailBrowsesWith(preds ...predicate.Rent591HomeDetailBrowse) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailBrowsesStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailTags applies the HasEdge predicate on the "rent591home_detail_tags" edge.
func HasRent591homeDetailTags() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailTagsTable, Rent591homeDetailTagsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailTagsWith applies the HasEdge predicate on the "rent591home_detail_tags" edge with a given conditions (other predicates).
func HasRent591homeDetailTagsWith(preds ...predicate.Rent591HomeDetailTag) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailTagsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailNavdatas applies the HasEdge predicate on the "rent591home_detail_navdatas" edge.
func HasRent591homeDetailNavdatas() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailNavdatasTable, Rent591homeDetailNavdatasPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailNavdatasWith applies the HasEdge predicate on the "rent591home_detail_navdatas" edge with a given conditions (other predicates).
func HasRent591homeDetailNavdatasWith(preds ...predicate.Rent591HomeDetailNavData) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailNavdatasStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailInfos applies the HasEdge predicate on the "rent591home_detail_infos" edge.
func HasRent591homeDetailInfos() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailInfosTable, Rent591homeDetailInfosPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailInfosWith applies the HasEdge predicate on the "rent591home_detail_infos" edge with a given conditions (other predicates).
func HasRent591homeDetailInfosWith(preds ...predicate.Rent591HomeDetailInfo) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailInfosStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailPublishs applies the HasEdge predicate on the "rent591home_detail_publishs" edge.
func HasRent591homeDetailPublishs() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailPublishsTable, Rent591homeDetailPublishsPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailPublishsWith applies the HasEdge predicate on the "rent591home_detail_publishs" edge with a given conditions (other predicates).
func HasRent591homeDetailPublishsWith(preds ...predicate.Rent591HomeDetailPublish) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailPublishsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasRent591homeDetailPositionRounds applies the HasEdge predicate on the "rent591home_detail_position_rounds" edge.
func HasRent591homeDetailPositionRounds() predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, Rent591homeDetailPositionRoundsTable, Rent591homeDetailPositionRoundsColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasRent591homeDetailPositionRoundsWith applies the HasEdge predicate on the "rent591home_detail_position_rounds" edge with a given conditions (other predicates).
func HasRent591homeDetailPositionRoundsWith(preds ...predicate.Rent591HomeDetailPositionRound) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		step := newRent591homeDetailPositionRoundsStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Rent591HomeDetail) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Rent591HomeDetail) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Rent591HomeDetail) predicate.Rent591HomeDetail {
	return predicate.Rent591HomeDetail(func(s *sql.Selector) {
		p(s.Not())
	})
}
