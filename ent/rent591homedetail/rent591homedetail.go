// Code generated by ent, DO NOT EDIT.

package rent591homedetail

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

const (
	// Label holds the string label denoting the rent591homedetail type in the database.
	Label = "rent591home_detail"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDeposit holds the string denoting the deposit field in the database.
	FieldDeposit = "deposit"
	// FieldKind holds the string denoting the kind field in the database.
	FieldKind = "kind"
	// FieldRelieved holds the string denoting the relieved field in the database.
	FieldRelieved = "relieved"
	// FieldRegionID holds the string denoting the region_id field in the database.
	FieldRegionID = "region_id"
	// FieldSectionID holds the string denoting the section_id field in the database.
	FieldSectionID = "section_id"
	// FieldDealText holds the string denoting the deal_text field in the database.
	FieldDealText = "deal_text"
	// FieldDealTime holds the string denoting the deal_time field in the database.
	FieldDealTime = "deal_time"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// FieldPriceUnit holds the string denoting the price_unit field in the database.
	FieldPriceUnit = "price_unit"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeRent591homes holds the string denoting the rent591homes edge name in mutations.
	EdgeRent591homes = "rent591homes"
	// EdgeRent591homeDetailBreadcrumbs holds the string denoting the rent591home_detail_breadcrumbs edge name in mutations.
	EdgeRent591homeDetailBreadcrumbs = "rent591home_detail_breadcrumbs"
	// EdgeRent591homeDetailShareinfos holds the string denoting the rent591home_detail_shareinfos edge name in mutations.
	EdgeRent591homeDetailShareinfos = "rent591home_detail_shareinfos"
	// EdgeRent591homeDetailBrowses holds the string denoting the rent591home_detail_browses edge name in mutations.
	EdgeRent591homeDetailBrowses = "rent591home_detail_browses"
	// EdgeRent591homeDetailTags holds the string denoting the rent591home_detail_tags edge name in mutations.
	EdgeRent591homeDetailTags = "rent591home_detail_tags"
	// EdgeRent591homeDetailNavdatas holds the string denoting the rent591home_detail_navdatas edge name in mutations.
	EdgeRent591homeDetailNavdatas = "rent591home_detail_navdatas"
	// EdgeRent591homeDetailInfos holds the string denoting the rent591home_detail_infos edge name in mutations.
	EdgeRent591homeDetailInfos = "rent591home_detail_infos"
	// EdgeRent591homeDetailPublishs holds the string denoting the rent591home_detail_publishs edge name in mutations.
	EdgeRent591homeDetailPublishs = "rent591home_detail_publishs"
	// EdgeRent591homeDetailPositionRounds holds the string denoting the rent591home_detail_position_rounds edge name in mutations.
	EdgeRent591homeDetailPositionRounds = "rent591home_detail_position_rounds"
	// Table holds the table name of the rent591homedetail in the database.
	Table = "rent591home_details"
	// Rent591homesTable is the table that holds the rent591homes relation/edge.
	Rent591homesTable = "rent591home_details"
	// Rent591homesInverseTable is the table name for the Rent591Home entity.
	// It exists in this package in order to avoid circular dependency with the "rent591home" package.
	Rent591homesInverseTable = "rent591homes"
	// Rent591homesColumn is the table column denoting the rent591homes relation/edge.
	Rent591homesColumn = "rent591home_rent591home_details"
	// Rent591homeDetailBreadcrumbsTable is the table that holds the rent591home_detail_breadcrumbs relation/edge. The primary key declared below.
	Rent591homeDetailBreadcrumbsTable = "rent591home_detail_breadcrumb_rent591home_details"
	// Rent591homeDetailBreadcrumbsInverseTable is the table name for the Rent591HomeDetailBreadcrumb entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailbreadcrumb" package.
	Rent591homeDetailBreadcrumbsInverseTable = "rent591home_detail_breadcrumbs"
	// Rent591homeDetailShareinfosTable is the table that holds the rent591home_detail_shareinfos relation/edge. The primary key declared below.
	Rent591homeDetailShareinfosTable = "rent591home_detail_rent591home_detail_shareinfos"
	// Rent591homeDetailShareinfosInverseTable is the table name for the Rent591HomeDetailShareInfo entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailshareinfo" package.
	Rent591homeDetailShareinfosInverseTable = "rent591home_detail_share_infos"
	// Rent591homeDetailBrowsesTable is the table that holds the rent591home_detail_browses relation/edge. The primary key declared below.
	Rent591homeDetailBrowsesTable = "rent591home_detail_rent591home_detail_browses"
	// Rent591homeDetailBrowsesInverseTable is the table name for the Rent591HomeDetailBrowse entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailbrowse" package.
	Rent591homeDetailBrowsesInverseTable = "rent591home_detail_browses"
	// Rent591homeDetailTagsTable is the table that holds the rent591home_detail_tags relation/edge. The primary key declared below.
	Rent591homeDetailTagsTable = "rent591home_detail_tag_rent591home_details"
	// Rent591homeDetailTagsInverseTable is the table name for the Rent591HomeDetailTag entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailtag" package.
	Rent591homeDetailTagsInverseTable = "rent591home_detail_tags"
	// Rent591homeDetailNavdatasTable is the table that holds the rent591home_detail_navdatas relation/edge. The primary key declared below.
	Rent591homeDetailNavdatasTable = "rent591home_detail_nav_data_rent591home_details"
	// Rent591homeDetailNavdatasInverseTable is the table name for the Rent591HomeDetailNavData entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailnavdata" package.
	Rent591homeDetailNavdatasInverseTable = "rent591home_detail_nav_data"
	// Rent591homeDetailInfosTable is the table that holds the rent591home_detail_infos relation/edge. The primary key declared below.
	Rent591homeDetailInfosTable = "rent591home_detail_info_rent591home_details"
	// Rent591homeDetailInfosInverseTable is the table name for the Rent591HomeDetailInfo entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailinfo" package.
	Rent591homeDetailInfosInverseTable = "rent591home_detail_infos"
	// Rent591homeDetailPublishsTable is the table that holds the rent591home_detail_publishs relation/edge. The primary key declared below.
	Rent591homeDetailPublishsTable = "rent591home_detail_rent591home_detail_publishs"
	// Rent591homeDetailPublishsInverseTable is the table name for the Rent591HomeDetailPublish entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailpublish" package.
	Rent591homeDetailPublishsInverseTable = "rent591home_detail_publishes"
	// Rent591homeDetailPositionRoundsTable is the table that holds the rent591home_detail_position_rounds relation/edge.
	Rent591homeDetailPositionRoundsTable = "rent591home_detail_position_rounds"
	// Rent591homeDetailPositionRoundsInverseTable is the table name for the Rent591HomeDetailPositionRound entity.
	// It exists in this package in order to avoid circular dependency with the "rent591homedetailpositionround" package.
	Rent591homeDetailPositionRoundsInverseTable = "rent591home_detail_position_rounds"
	// Rent591homeDetailPositionRoundsColumn is the table column denoting the rent591home_detail_position_rounds relation/edge.
	Rent591homeDetailPositionRoundsColumn = "rent591home_detail_rent591home_detail_position_rounds"
)

// Columns holds all SQL columns for rent591homedetail fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldDeposit,
	FieldKind,
	FieldRelieved,
	FieldRegionID,
	FieldSectionID,
	FieldDealText,
	FieldDealTime,
	FieldPrice,
	FieldPriceUnit,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "rent591home_details"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"rent591home_rent591home_details",
}

var (
	// Rent591homeDetailBreadcrumbsPrimaryKey and Rent591homeDetailBreadcrumbsColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_breadcrumbs relation (M2M).
	Rent591homeDetailBreadcrumbsPrimaryKey = []string{"rent591home_detail_breadcrumb_id", "rent591home_detail_id"}
	// Rent591homeDetailShareinfosPrimaryKey and Rent591homeDetailShareinfosColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_shareinfos relation (M2M).
	Rent591homeDetailShareinfosPrimaryKey = []string{"rent591home_detail_id", "rent591home_detail_share_info_id"}
	// Rent591homeDetailBrowsesPrimaryKey and Rent591homeDetailBrowsesColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_browses relation (M2M).
	Rent591homeDetailBrowsesPrimaryKey = []string{"rent591home_detail_id", "rent591home_detail_browse_id"}
	// Rent591homeDetailTagsPrimaryKey and Rent591homeDetailTagsColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_tags relation (M2M).
	Rent591homeDetailTagsPrimaryKey = []string{"rent591home_detail_tag_id", "rent591home_detail_id"}
	// Rent591homeDetailNavdatasPrimaryKey and Rent591homeDetailNavdatasColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_navdatas relation (M2M).
	Rent591homeDetailNavdatasPrimaryKey = []string{"rent591home_detail_nav_data_id", "rent591home_detail_id"}
	// Rent591homeDetailInfosPrimaryKey and Rent591homeDetailInfosColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_infos relation (M2M).
	Rent591homeDetailInfosPrimaryKey = []string{"rent591home_detail_info_id", "rent591home_detail_id"}
	// Rent591homeDetailPublishsPrimaryKey and Rent591homeDetailPublishsColumn2 are the table columns denoting the
	// primary key for the rent591home_detail_publishs relation (M2M).
	Rent591homeDetailPublishsPrimaryKey = []string{"rent591home_detail_id", "rent591home_detail_publish_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
)

// OrderOption defines the ordering options for the Rent591HomeDetail queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTitle orders the results by the title field.
func ByTitle(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTitle, opts...).ToFunc()
}

// ByDeposit orders the results by the deposit field.
func ByDeposit(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeposit, opts...).ToFunc()
}

// ByKind orders the results by the kind field.
func ByKind(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldKind, opts...).ToFunc()
}

// ByRelieved orders the results by the relieved field.
func ByRelieved(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRelieved, opts...).ToFunc()
}

// ByRegionID orders the results by the region_id field.
func ByRegionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRegionID, opts...).ToFunc()
}

// BySectionID orders the results by the section_id field.
func BySectionID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSectionID, opts...).ToFunc()
}

// ByDealText orders the results by the deal_text field.
func ByDealText(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDealText, opts...).ToFunc()
}

// ByDealTime orders the results by the deal_time field.
func ByDealTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDealTime, opts...).ToFunc()
}

// ByPrice orders the results by the price field.
func ByPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPrice, opts...).ToFunc()
}

// ByPriceUnit orders the results by the price_unit field.
func ByPriceUnit(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPriceUnit, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByRent591homesField orders the results by rent591homes field.
func ByRent591homesField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homesStep(), sql.OrderByField(field, opts...))
	}
}

// ByRent591homeDetailBreadcrumbsCount orders the results by rent591home_detail_breadcrumbs count.
func ByRent591homeDetailBreadcrumbsCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailBreadcrumbsStep(), opts...)
	}
}

// ByRent591homeDetailBreadcrumbs orders the results by rent591home_detail_breadcrumbs terms.
func ByRent591homeDetailBreadcrumbs(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailBreadcrumbsStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailShareinfosCount orders the results by rent591home_detail_shareinfos count.
func ByRent591homeDetailShareinfosCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailShareinfosStep(), opts...)
	}
}

// ByRent591homeDetailShareinfos orders the results by rent591home_detail_shareinfos terms.
func ByRent591homeDetailShareinfos(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailShareinfosStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailBrowsesCount orders the results by rent591home_detail_browses count.
func ByRent591homeDetailBrowsesCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailBrowsesStep(), opts...)
	}
}

// ByRent591homeDetailBrowses orders the results by rent591home_detail_browses terms.
func ByRent591homeDetailBrowses(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailBrowsesStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailTagsCount orders the results by rent591home_detail_tags count.
func ByRent591homeDetailTagsCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailTagsStep(), opts...)
	}
}

// ByRent591homeDetailTags orders the results by rent591home_detail_tags terms.
func ByRent591homeDetailTags(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailTagsStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailNavdatasCount orders the results by rent591home_detail_navdatas count.
func ByRent591homeDetailNavdatasCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailNavdatasStep(), opts...)
	}
}

// ByRent591homeDetailNavdatas orders the results by rent591home_detail_navdatas terms.
func ByRent591homeDetailNavdatas(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailNavdatasStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailInfosCount orders the results by rent591home_detail_infos count.
func ByRent591homeDetailInfosCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailInfosStep(), opts...)
	}
}

// ByRent591homeDetailInfos orders the results by rent591home_detail_infos terms.
func ByRent591homeDetailInfos(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailInfosStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailPublishsCount orders the results by rent591home_detail_publishs count.
func ByRent591homeDetailPublishsCount(opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborsCount(s, newRent591homeDetailPublishsStep(), opts...)
	}
}

// ByRent591homeDetailPublishs orders the results by rent591home_detail_publishs terms.
func ByRent591homeDetailPublishs(term sql.OrderTerm, terms ...sql.OrderTerm) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailPublishsStep(), append([]sql.OrderTerm{term}, terms...)...)
	}
}

// ByRent591homeDetailPositionRoundsField orders the results by rent591home_detail_position_rounds field.
func ByRent591homeDetailPositionRoundsField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newRent591homeDetailPositionRoundsStep(), sql.OrderByField(field, opts...))
	}
}
func newRent591homesStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homesInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2O, true, Rent591homesTable, Rent591homesColumn),
	)
}
func newRent591homeDetailBreadcrumbsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailBreadcrumbsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailBreadcrumbsTable, Rent591homeDetailBreadcrumbsPrimaryKey...),
	)
}
func newRent591homeDetailShareinfosStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailShareinfosInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailShareinfosTable, Rent591homeDetailShareinfosPrimaryKey...),
	)
}
func newRent591homeDetailBrowsesStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailBrowsesInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailBrowsesTable, Rent591homeDetailBrowsesPrimaryKey...),
	)
}
func newRent591homeDetailTagsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailTagsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailTagsTable, Rent591homeDetailTagsPrimaryKey...),
	)
}
func newRent591homeDetailNavdatasStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailNavdatasInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailNavdatasTable, Rent591homeDetailNavdatasPrimaryKey...),
	)
}
func newRent591homeDetailInfosStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailInfosInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, true, Rent591homeDetailInfosTable, Rent591homeDetailInfosPrimaryKey...),
	)
}
func newRent591homeDetailPublishsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailPublishsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2M, false, Rent591homeDetailPublishsTable, Rent591homeDetailPublishsPrimaryKey...),
	)
}
func newRent591homeDetailPositionRoundsStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(Rent591homeDetailPositionRoundsInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.O2O, false, Rent591homeDetailPositionRoundsTable, Rent591homeDetailPositionRoundsColumn),
	)
}
