// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
	"github.com/programzheng/rent-house-crawler/ent/rent591home"
	"github.com/programzheng/rent-house-crawler/ent/rent591homedetail"
	"github.com/programzheng/rent-house-crawler/ent/rent591homesurrounding"
	"github.com/programzheng/rent-house-crawler/ent/rent591hometag"
)

// Rent591HomeCreate is the builder for creating a Rent591Home entity.
type Rent591HomeCreate struct {
	config
	mutation *Rent591HomeMutation
	hooks    []Hook
	conflict []sql.ConflictOption
}

// SetTitle sets the "title" field.
func (rc *Rent591HomeCreate) SetTitle(s string) *Rent591HomeCreate {
	rc.mutation.SetTitle(s)
	return rc
}

// SetType sets the "type" field.
func (rc *Rent591HomeCreate) SetType(i int) *Rent591HomeCreate {
	rc.mutation.SetType(i)
	return rc
}

// SetPostID sets the "post_id" field.
func (rc *Rent591HomeCreate) SetPostID(i int) *Rent591HomeCreate {
	rc.mutation.SetPostID(i)
	return rc
}

// SetKindName sets the "kind_name" field.
func (rc *Rent591HomeCreate) SetKindName(s string) *Rent591HomeCreate {
	rc.mutation.SetKindName(s)
	return rc
}

// SetRoomStr sets the "room_str" field.
func (rc *Rent591HomeCreate) SetRoomStr(s string) *Rent591HomeCreate {
	rc.mutation.SetRoomStr(s)
	return rc
}

// SetFloorStr sets the "floor_str" field.
func (rc *Rent591HomeCreate) SetFloorStr(s string) *Rent591HomeCreate {
	rc.mutation.SetFloorStr(s)
	return rc
}

// SetCommunity sets the "community" field.
func (rc *Rent591HomeCreate) SetCommunity(s string) *Rent591HomeCreate {
	rc.mutation.SetCommunity(s)
	return rc
}

// SetPrice sets the "price" field.
func (rc *Rent591HomeCreate) SetPrice(i int) *Rent591HomeCreate {
	rc.mutation.SetPrice(i)
	return rc
}

// SetPriceUnit sets the "price_unit" field.
func (rc *Rent591HomeCreate) SetPriceUnit(s string) *Rent591HomeCreate {
	rc.mutation.SetPriceUnit(s)
	return rc
}

// SetPhotoList sets the "photo_list" field.
func (rc *Rent591HomeCreate) SetPhotoList(s []string) *Rent591HomeCreate {
	rc.mutation.SetPhotoList(s)
	return rc
}

// SetRegionName sets the "region_name" field.
func (rc *Rent591HomeCreate) SetRegionName(s string) *Rent591HomeCreate {
	rc.mutation.SetRegionName(s)
	return rc
}

// SetNillableRegionName sets the "region_name" field if the given value is not nil.
func (rc *Rent591HomeCreate) SetNillableRegionName(s *string) *Rent591HomeCreate {
	if s != nil {
		rc.SetRegionName(*s)
	}
	return rc
}

// SetSectionName sets the "section_name" field.
func (rc *Rent591HomeCreate) SetSectionName(s string) *Rent591HomeCreate {
	rc.mutation.SetSectionName(s)
	return rc
}

// SetStreetName sets the "street_name" field.
func (rc *Rent591HomeCreate) SetStreetName(s string) *Rent591HomeCreate {
	rc.mutation.SetStreetName(s)
	return rc
}

// SetLocation sets the "location" field.
func (rc *Rent591HomeCreate) SetLocation(s string) *Rent591HomeCreate {
	rc.mutation.SetLocation(s)
	return rc
}

// SetArea sets the "area" field.
func (rc *Rent591HomeCreate) SetArea(s string) *Rent591HomeCreate {
	rc.mutation.SetArea(s)
	return rc
}

// SetRoleName sets the "role_name" field.
func (rc *Rent591HomeCreate) SetRoleName(s string) *Rent591HomeCreate {
	rc.mutation.SetRoleName(s)
	return rc
}

// SetContact sets the "contact" field.
func (rc *Rent591HomeCreate) SetContact(s string) *Rent591HomeCreate {
	rc.mutation.SetContact(s)
	return rc
}

// SetRefreshTime sets the "refresh_time" field.
func (rc *Rent591HomeCreate) SetRefreshTime(s string) *Rent591HomeCreate {
	rc.mutation.SetRefreshTime(s)
	return rc
}

// SetYesterdayHit sets the "yesterday_hit" field.
func (rc *Rent591HomeCreate) SetYesterdayHit(i int) *Rent591HomeCreate {
	rc.mutation.SetYesterdayHit(i)
	return rc
}

// SetIsVip sets the "is_vip" field.
func (rc *Rent591HomeCreate) SetIsVip(i int) *Rent591HomeCreate {
	rc.mutation.SetIsVip(i)
	return rc
}

// SetIsCombine sets the "is_combine" field.
func (rc *Rent591HomeCreate) SetIsCombine(i int) *Rent591HomeCreate {
	rc.mutation.SetIsCombine(i)
	return rc
}

// SetHurry sets the "hurry" field.
func (rc *Rent591HomeCreate) SetHurry(i int) *Rent591HomeCreate {
	rc.mutation.SetHurry(i)
	return rc
}

// SetIsSocial sets the "is_social" field.
func (rc *Rent591HomeCreate) SetIsSocial(i int) *Rent591HomeCreate {
	rc.mutation.SetIsSocial(i)
	return rc
}

// SetDiscountPriceStr sets the "discount_price_str" field.
func (rc *Rent591HomeCreate) SetDiscountPriceStr(s string) *Rent591HomeCreate {
	rc.mutation.SetDiscountPriceStr(s)
	return rc
}

// SetCasesID sets the "cases_id" field.
func (rc *Rent591HomeCreate) SetCasesID(i int) *Rent591HomeCreate {
	rc.mutation.SetCasesID(i)
	return rc
}

// SetIsVideo sets the "is_video" field.
func (rc *Rent591HomeCreate) SetIsVideo(i int) *Rent591HomeCreate {
	rc.mutation.SetIsVideo(i)
	return rc
}

// SetPreferred sets the "preferred" field.
func (rc *Rent591HomeCreate) SetPreferred(i int) *Rent591HomeCreate {
	rc.mutation.SetPreferred(i)
	return rc
}

// SetCid sets the "cid" field.
func (rc *Rent591HomeCreate) SetCid(i int) *Rent591HomeCreate {
	rc.mutation.SetCid(i)
	return rc
}

// SetCreatedAt sets the "created_at" field.
func (rc *Rent591HomeCreate) SetCreatedAt(t time.Time) *Rent591HomeCreate {
	rc.mutation.SetCreatedAt(t)
	return rc
}

// SetNillableCreatedAt sets the "created_at" field if the given value is not nil.
func (rc *Rent591HomeCreate) SetNillableCreatedAt(t *time.Time) *Rent591HomeCreate {
	if t != nil {
		rc.SetCreatedAt(*t)
	}
	return rc
}

// SetUpdatedAt sets the "updated_at" field.
func (rc *Rent591HomeCreate) SetUpdatedAt(t time.Time) *Rent591HomeCreate {
	rc.mutation.SetUpdatedAt(t)
	return rc
}

// SetNillableUpdatedAt sets the "updated_at" field if the given value is not nil.
func (rc *Rent591HomeCreate) SetNillableUpdatedAt(t *time.Time) *Rent591HomeCreate {
	if t != nil {
		rc.SetUpdatedAt(*t)
	}
	return rc
}

// AddRent591homeTagIDs adds the "rent591home_tags" edge to the Rent591HomeTag entity by IDs.
func (rc *Rent591HomeCreate) AddRent591homeTagIDs(ids ...int) *Rent591HomeCreate {
	rc.mutation.AddRent591homeTagIDs(ids...)
	return rc
}

// AddRent591homeTags adds the "rent591home_tags" edges to the Rent591HomeTag entity.
func (rc *Rent591HomeCreate) AddRent591homeTags(r ...*Rent591HomeTag) *Rent591HomeCreate {
	ids := make([]int, len(r))
	for i := range r {
		ids[i] = r[i].ID
	}
	return rc.AddRent591homeTagIDs(ids...)
}

// SetRent591homeSurroundingsID sets the "rent591home_surroundings" edge to the Rent591HomeSurrounding entity by ID.
func (rc *Rent591HomeCreate) SetRent591homeSurroundingsID(id int) *Rent591HomeCreate {
	rc.mutation.SetRent591homeSurroundingsID(id)
	return rc
}

// SetNillableRent591homeSurroundingsID sets the "rent591home_surroundings" edge to the Rent591HomeSurrounding entity by ID if the given value is not nil.
func (rc *Rent591HomeCreate) SetNillableRent591homeSurroundingsID(id *int) *Rent591HomeCreate {
	if id != nil {
		rc = rc.SetRent591homeSurroundingsID(*id)
	}
	return rc
}

// SetRent591homeSurroundings sets the "rent591home_surroundings" edge to the Rent591HomeSurrounding entity.
func (rc *Rent591HomeCreate) SetRent591homeSurroundings(r *Rent591HomeSurrounding) *Rent591HomeCreate {
	return rc.SetRent591homeSurroundingsID(r.ID)
}

// SetRent591homeDetailsID sets the "rent591home_details" edge to the Rent591HomeDetail entity by ID.
func (rc *Rent591HomeCreate) SetRent591homeDetailsID(id int) *Rent591HomeCreate {
	rc.mutation.SetRent591homeDetailsID(id)
	return rc
}

// SetNillableRent591homeDetailsID sets the "rent591home_details" edge to the Rent591HomeDetail entity by ID if the given value is not nil.
func (rc *Rent591HomeCreate) SetNillableRent591homeDetailsID(id *int) *Rent591HomeCreate {
	if id != nil {
		rc = rc.SetRent591homeDetailsID(*id)
	}
	return rc
}

// SetRent591homeDetails sets the "rent591home_details" edge to the Rent591HomeDetail entity.
func (rc *Rent591HomeCreate) SetRent591homeDetails(r *Rent591HomeDetail) *Rent591HomeCreate {
	return rc.SetRent591homeDetailsID(r.ID)
}

// Mutation returns the Rent591HomeMutation object of the builder.
func (rc *Rent591HomeCreate) Mutation() *Rent591HomeMutation {
	return rc.mutation
}

// Save creates the Rent591Home in the database.
func (rc *Rent591HomeCreate) Save(ctx context.Context) (*Rent591Home, error) {
	rc.defaults()
	return withHooks(ctx, rc.sqlSave, rc.mutation, rc.hooks)
}

// SaveX calls Save and panics if Save returns an error.
func (rc *Rent591HomeCreate) SaveX(ctx context.Context) *Rent591Home {
	v, err := rc.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (rc *Rent591HomeCreate) Exec(ctx context.Context) error {
	_, err := rc.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (rc *Rent591HomeCreate) ExecX(ctx context.Context) {
	if err := rc.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (rc *Rent591HomeCreate) defaults() {
	if _, ok := rc.mutation.CreatedAt(); !ok {
		v := rent591home.DefaultCreatedAt()
		rc.mutation.SetCreatedAt(v)
	}
	if _, ok := rc.mutation.UpdatedAt(); !ok {
		v := rent591home.DefaultUpdatedAt()
		rc.mutation.SetUpdatedAt(v)
	}
}

// check runs all checks and user-defined validators on the builder.
func (rc *Rent591HomeCreate) check() error {
	if _, ok := rc.mutation.Title(); !ok {
		return &ValidationError{Name: "title", err: errors.New(`ent: missing required field "Rent591Home.title"`)}
	}
	if _, ok := rc.mutation.GetType(); !ok {
		return &ValidationError{Name: "type", err: errors.New(`ent: missing required field "Rent591Home.type"`)}
	}
	if _, ok := rc.mutation.PostID(); !ok {
		return &ValidationError{Name: "post_id", err: errors.New(`ent: missing required field "Rent591Home.post_id"`)}
	}
	if _, ok := rc.mutation.KindName(); !ok {
		return &ValidationError{Name: "kind_name", err: errors.New(`ent: missing required field "Rent591Home.kind_name"`)}
	}
	if _, ok := rc.mutation.RoomStr(); !ok {
		return &ValidationError{Name: "room_str", err: errors.New(`ent: missing required field "Rent591Home.room_str"`)}
	}
	if _, ok := rc.mutation.FloorStr(); !ok {
		return &ValidationError{Name: "floor_str", err: errors.New(`ent: missing required field "Rent591Home.floor_str"`)}
	}
	if _, ok := rc.mutation.Community(); !ok {
		return &ValidationError{Name: "community", err: errors.New(`ent: missing required field "Rent591Home.community"`)}
	}
	if _, ok := rc.mutation.Price(); !ok {
		return &ValidationError{Name: "price", err: errors.New(`ent: missing required field "Rent591Home.price"`)}
	}
	if _, ok := rc.mutation.PriceUnit(); !ok {
		return &ValidationError{Name: "price_unit", err: errors.New(`ent: missing required field "Rent591Home.price_unit"`)}
	}
	if _, ok := rc.mutation.SectionName(); !ok {
		return &ValidationError{Name: "section_name", err: errors.New(`ent: missing required field "Rent591Home.section_name"`)}
	}
	if _, ok := rc.mutation.StreetName(); !ok {
		return &ValidationError{Name: "street_name", err: errors.New(`ent: missing required field "Rent591Home.street_name"`)}
	}
	if _, ok := rc.mutation.Location(); !ok {
		return &ValidationError{Name: "location", err: errors.New(`ent: missing required field "Rent591Home.location"`)}
	}
	if _, ok := rc.mutation.Area(); !ok {
		return &ValidationError{Name: "area", err: errors.New(`ent: missing required field "Rent591Home.area"`)}
	}
	if _, ok := rc.mutation.RoleName(); !ok {
		return &ValidationError{Name: "role_name", err: errors.New(`ent: missing required field "Rent591Home.role_name"`)}
	}
	if _, ok := rc.mutation.Contact(); !ok {
		return &ValidationError{Name: "contact", err: errors.New(`ent: missing required field "Rent591Home.contact"`)}
	}
	if _, ok := rc.mutation.RefreshTime(); !ok {
		return &ValidationError{Name: "refresh_time", err: errors.New(`ent: missing required field "Rent591Home.refresh_time"`)}
	}
	if _, ok := rc.mutation.YesterdayHit(); !ok {
		return &ValidationError{Name: "yesterday_hit", err: errors.New(`ent: missing required field "Rent591Home.yesterday_hit"`)}
	}
	if _, ok := rc.mutation.IsVip(); !ok {
		return &ValidationError{Name: "is_vip", err: errors.New(`ent: missing required field "Rent591Home.is_vip"`)}
	}
	if _, ok := rc.mutation.IsCombine(); !ok {
		return &ValidationError{Name: "is_combine", err: errors.New(`ent: missing required field "Rent591Home.is_combine"`)}
	}
	if _, ok := rc.mutation.Hurry(); !ok {
		return &ValidationError{Name: "hurry", err: errors.New(`ent: missing required field "Rent591Home.hurry"`)}
	}
	if _, ok := rc.mutation.IsSocial(); !ok {
		return &ValidationError{Name: "is_social", err: errors.New(`ent: missing required field "Rent591Home.is_social"`)}
	}
	if _, ok := rc.mutation.DiscountPriceStr(); !ok {
		return &ValidationError{Name: "discount_price_str", err: errors.New(`ent: missing required field "Rent591Home.discount_price_str"`)}
	}
	if _, ok := rc.mutation.CasesID(); !ok {
		return &ValidationError{Name: "cases_id", err: errors.New(`ent: missing required field "Rent591Home.cases_id"`)}
	}
	if _, ok := rc.mutation.IsVideo(); !ok {
		return &ValidationError{Name: "is_video", err: errors.New(`ent: missing required field "Rent591Home.is_video"`)}
	}
	if _, ok := rc.mutation.Preferred(); !ok {
		return &ValidationError{Name: "preferred", err: errors.New(`ent: missing required field "Rent591Home.preferred"`)}
	}
	if _, ok := rc.mutation.Cid(); !ok {
		return &ValidationError{Name: "cid", err: errors.New(`ent: missing required field "Rent591Home.cid"`)}
	}
	if _, ok := rc.mutation.CreatedAt(); !ok {
		return &ValidationError{Name: "created_at", err: errors.New(`ent: missing required field "Rent591Home.created_at"`)}
	}
	if _, ok := rc.mutation.UpdatedAt(); !ok {
		return &ValidationError{Name: "updated_at", err: errors.New(`ent: missing required field "Rent591Home.updated_at"`)}
	}
	return nil
}

func (rc *Rent591HomeCreate) sqlSave(ctx context.Context) (*Rent591Home, error) {
	if err := rc.check(); err != nil {
		return nil, err
	}
	_node, _spec := rc.createSpec()
	if err := sqlgraph.CreateNode(ctx, rc.driver, _spec); err != nil {
		if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	id := _spec.ID.Value.(int64)
	_node.ID = int(id)
	rc.mutation.id = &_node.ID
	rc.mutation.done = true
	return _node, nil
}

func (rc *Rent591HomeCreate) createSpec() (*Rent591Home, *sqlgraph.CreateSpec) {
	var (
		_node = &Rent591Home{config: rc.config}
		_spec = sqlgraph.NewCreateSpec(rent591home.Table, sqlgraph.NewFieldSpec(rent591home.FieldID, field.TypeInt))
	)
	_spec.OnConflict = rc.conflict
	if value, ok := rc.mutation.Title(); ok {
		_spec.SetField(rent591home.FieldTitle, field.TypeString, value)
		_node.Title = value
	}
	if value, ok := rc.mutation.GetType(); ok {
		_spec.SetField(rent591home.FieldType, field.TypeInt, value)
		_node.Type = value
	}
	if value, ok := rc.mutation.PostID(); ok {
		_spec.SetField(rent591home.FieldPostID, field.TypeInt, value)
		_node.PostID = value
	}
	if value, ok := rc.mutation.KindName(); ok {
		_spec.SetField(rent591home.FieldKindName, field.TypeString, value)
		_node.KindName = value
	}
	if value, ok := rc.mutation.RoomStr(); ok {
		_spec.SetField(rent591home.FieldRoomStr, field.TypeString, value)
		_node.RoomStr = value
	}
	if value, ok := rc.mutation.FloorStr(); ok {
		_spec.SetField(rent591home.FieldFloorStr, field.TypeString, value)
		_node.FloorStr = value
	}
	if value, ok := rc.mutation.Community(); ok {
		_spec.SetField(rent591home.FieldCommunity, field.TypeString, value)
		_node.Community = value
	}
	if value, ok := rc.mutation.Price(); ok {
		_spec.SetField(rent591home.FieldPrice, field.TypeInt, value)
		_node.Price = value
	}
	if value, ok := rc.mutation.PriceUnit(); ok {
		_spec.SetField(rent591home.FieldPriceUnit, field.TypeString, value)
		_node.PriceUnit = value
	}
	if value, ok := rc.mutation.PhotoList(); ok {
		_spec.SetField(rent591home.FieldPhotoList, field.TypeJSON, value)
		_node.PhotoList = value
	}
	if value, ok := rc.mutation.RegionName(); ok {
		_spec.SetField(rent591home.FieldRegionName, field.TypeString, value)
		_node.RegionName = value
	}
	if value, ok := rc.mutation.SectionName(); ok {
		_spec.SetField(rent591home.FieldSectionName, field.TypeString, value)
		_node.SectionName = value
	}
	if value, ok := rc.mutation.StreetName(); ok {
		_spec.SetField(rent591home.FieldStreetName, field.TypeString, value)
		_node.StreetName = value
	}
	if value, ok := rc.mutation.Location(); ok {
		_spec.SetField(rent591home.FieldLocation, field.TypeString, value)
		_node.Location = value
	}
	if value, ok := rc.mutation.Area(); ok {
		_spec.SetField(rent591home.FieldArea, field.TypeString, value)
		_node.Area = value
	}
	if value, ok := rc.mutation.RoleName(); ok {
		_spec.SetField(rent591home.FieldRoleName, field.TypeString, value)
		_node.RoleName = value
	}
	if value, ok := rc.mutation.Contact(); ok {
		_spec.SetField(rent591home.FieldContact, field.TypeString, value)
		_node.Contact = value
	}
	if value, ok := rc.mutation.RefreshTime(); ok {
		_spec.SetField(rent591home.FieldRefreshTime, field.TypeString, value)
		_node.RefreshTime = value
	}
	if value, ok := rc.mutation.YesterdayHit(); ok {
		_spec.SetField(rent591home.FieldYesterdayHit, field.TypeInt, value)
		_node.YesterdayHit = value
	}
	if value, ok := rc.mutation.IsVip(); ok {
		_spec.SetField(rent591home.FieldIsVip, field.TypeInt, value)
		_node.IsVip = value
	}
	if value, ok := rc.mutation.IsCombine(); ok {
		_spec.SetField(rent591home.FieldIsCombine, field.TypeInt, value)
		_node.IsCombine = value
	}
	if value, ok := rc.mutation.Hurry(); ok {
		_spec.SetField(rent591home.FieldHurry, field.TypeInt, value)
		_node.Hurry = value
	}
	if value, ok := rc.mutation.IsSocial(); ok {
		_spec.SetField(rent591home.FieldIsSocial, field.TypeInt, value)
		_node.IsSocial = value
	}
	if value, ok := rc.mutation.DiscountPriceStr(); ok {
		_spec.SetField(rent591home.FieldDiscountPriceStr, field.TypeString, value)
		_node.DiscountPriceStr = value
	}
	if value, ok := rc.mutation.CasesID(); ok {
		_spec.SetField(rent591home.FieldCasesID, field.TypeInt, value)
		_node.CasesID = value
	}
	if value, ok := rc.mutation.IsVideo(); ok {
		_spec.SetField(rent591home.FieldIsVideo, field.TypeInt, value)
		_node.IsVideo = value
	}
	if value, ok := rc.mutation.Preferred(); ok {
		_spec.SetField(rent591home.FieldPreferred, field.TypeInt, value)
		_node.Preferred = value
	}
	if value, ok := rc.mutation.Cid(); ok {
		_spec.SetField(rent591home.FieldCid, field.TypeInt, value)
		_node.Cid = value
	}
	if value, ok := rc.mutation.CreatedAt(); ok {
		_spec.SetField(rent591home.FieldCreatedAt, field.TypeTime, value)
		_node.CreatedAt = value
	}
	if value, ok := rc.mutation.UpdatedAt(); ok {
		_spec.SetField(rent591home.FieldUpdatedAt, field.TypeTime, value)
		_node.UpdatedAt = value
	}
	if nodes := rc.mutation.Rent591homeTagsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.M2M,
			Inverse: true,
			Table:   rent591home.Rent591homeTagsTable,
			Columns: rent591home.Rent591homeTagsPrimaryKey,
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(rent591hometag.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := rc.mutation.Rent591homeSurroundingsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: false,
			Table:   rent591home.Rent591homeSurroundingsTable,
			Columns: []string{rent591home.Rent591homeSurroundingsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(rent591homesurrounding.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	if nodes := rc.mutation.Rent591homeDetailsIDs(); len(nodes) > 0 {
		edge := &sqlgraph.EdgeSpec{
			Rel:     sqlgraph.O2O,
			Inverse: false,
			Table:   rent591home.Rent591homeDetailsTable,
			Columns: []string{rent591home.Rent591homeDetailsColumn},
			Bidi:    false,
			Target: &sqlgraph.EdgeTarget{
				IDSpec: sqlgraph.NewFieldSpec(rent591homedetail.FieldID, field.TypeInt),
			},
		}
		for _, k := range nodes {
			edge.Target.Nodes = append(edge.Target.Nodes, k)
		}
		_spec.Edges = append(_spec.Edges, edge)
	}
	return _node, _spec
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.Rent591Home.Create().
//		SetTitle(v).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.Rent591HomeUpsert) {
//			SetTitle(v+v).
//		}).
//		Exec(ctx)
func (rc *Rent591HomeCreate) OnConflict(opts ...sql.ConflictOption) *Rent591HomeUpsertOne {
	rc.conflict = opts
	return &Rent591HomeUpsertOne{
		create: rc,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (rc *Rent591HomeCreate) OnConflictColumns(columns ...string) *Rent591HomeUpsertOne {
	rc.conflict = append(rc.conflict, sql.ConflictColumns(columns...))
	return &Rent591HomeUpsertOne{
		create: rc,
	}
}

type (
	// Rent591HomeUpsertOne is the builder for "upsert"-ing
	//  one Rent591Home node.
	Rent591HomeUpsertOne struct {
		create *Rent591HomeCreate
	}

	// Rent591HomeUpsert is the "OnConflict" setter.
	Rent591HomeUpsert struct {
		*sql.UpdateSet
	}
)

// SetTitle sets the "title" field.
func (u *Rent591HomeUpsert) SetTitle(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldTitle, v)
	return u
}

// UpdateTitle sets the "title" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateTitle() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldTitle)
	return u
}

// SetType sets the "type" field.
func (u *Rent591HomeUpsert) SetType(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldType, v)
	return u
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateType() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldType)
	return u
}

// AddType adds v to the "type" field.
func (u *Rent591HomeUpsert) AddType(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldType, v)
	return u
}

// SetPostID sets the "post_id" field.
func (u *Rent591HomeUpsert) SetPostID(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldPostID, v)
	return u
}

// UpdatePostID sets the "post_id" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdatePostID() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldPostID)
	return u
}

// AddPostID adds v to the "post_id" field.
func (u *Rent591HomeUpsert) AddPostID(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldPostID, v)
	return u
}

// SetKindName sets the "kind_name" field.
func (u *Rent591HomeUpsert) SetKindName(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldKindName, v)
	return u
}

// UpdateKindName sets the "kind_name" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateKindName() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldKindName)
	return u
}

// SetRoomStr sets the "room_str" field.
func (u *Rent591HomeUpsert) SetRoomStr(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldRoomStr, v)
	return u
}

// UpdateRoomStr sets the "room_str" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateRoomStr() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldRoomStr)
	return u
}

// SetFloorStr sets the "floor_str" field.
func (u *Rent591HomeUpsert) SetFloorStr(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldFloorStr, v)
	return u
}

// UpdateFloorStr sets the "floor_str" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateFloorStr() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldFloorStr)
	return u
}

// SetCommunity sets the "community" field.
func (u *Rent591HomeUpsert) SetCommunity(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldCommunity, v)
	return u
}

// UpdateCommunity sets the "community" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateCommunity() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldCommunity)
	return u
}

// SetPrice sets the "price" field.
func (u *Rent591HomeUpsert) SetPrice(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldPrice, v)
	return u
}

// UpdatePrice sets the "price" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdatePrice() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldPrice)
	return u
}

// AddPrice adds v to the "price" field.
func (u *Rent591HomeUpsert) AddPrice(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldPrice, v)
	return u
}

// SetPriceUnit sets the "price_unit" field.
func (u *Rent591HomeUpsert) SetPriceUnit(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldPriceUnit, v)
	return u
}

// UpdatePriceUnit sets the "price_unit" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdatePriceUnit() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldPriceUnit)
	return u
}

// SetPhotoList sets the "photo_list" field.
func (u *Rent591HomeUpsert) SetPhotoList(v []string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldPhotoList, v)
	return u
}

// UpdatePhotoList sets the "photo_list" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdatePhotoList() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldPhotoList)
	return u
}

// ClearPhotoList clears the value of the "photo_list" field.
func (u *Rent591HomeUpsert) ClearPhotoList() *Rent591HomeUpsert {
	u.SetNull(rent591home.FieldPhotoList)
	return u
}

// SetRegionName sets the "region_name" field.
func (u *Rent591HomeUpsert) SetRegionName(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldRegionName, v)
	return u
}

// UpdateRegionName sets the "region_name" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateRegionName() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldRegionName)
	return u
}

// ClearRegionName clears the value of the "region_name" field.
func (u *Rent591HomeUpsert) ClearRegionName() *Rent591HomeUpsert {
	u.SetNull(rent591home.FieldRegionName)
	return u
}

// SetSectionName sets the "section_name" field.
func (u *Rent591HomeUpsert) SetSectionName(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldSectionName, v)
	return u
}

// UpdateSectionName sets the "section_name" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateSectionName() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldSectionName)
	return u
}

// SetStreetName sets the "street_name" field.
func (u *Rent591HomeUpsert) SetStreetName(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldStreetName, v)
	return u
}

// UpdateStreetName sets the "street_name" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateStreetName() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldStreetName)
	return u
}

// SetLocation sets the "location" field.
func (u *Rent591HomeUpsert) SetLocation(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldLocation, v)
	return u
}

// UpdateLocation sets the "location" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateLocation() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldLocation)
	return u
}

// SetArea sets the "area" field.
func (u *Rent591HomeUpsert) SetArea(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldArea, v)
	return u
}

// UpdateArea sets the "area" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateArea() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldArea)
	return u
}

// SetRoleName sets the "role_name" field.
func (u *Rent591HomeUpsert) SetRoleName(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldRoleName, v)
	return u
}

// UpdateRoleName sets the "role_name" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateRoleName() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldRoleName)
	return u
}

// SetContact sets the "contact" field.
func (u *Rent591HomeUpsert) SetContact(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldContact, v)
	return u
}

// UpdateContact sets the "contact" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateContact() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldContact)
	return u
}

// SetRefreshTime sets the "refresh_time" field.
func (u *Rent591HomeUpsert) SetRefreshTime(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldRefreshTime, v)
	return u
}

// UpdateRefreshTime sets the "refresh_time" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateRefreshTime() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldRefreshTime)
	return u
}

// SetYesterdayHit sets the "yesterday_hit" field.
func (u *Rent591HomeUpsert) SetYesterdayHit(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldYesterdayHit, v)
	return u
}

// UpdateYesterdayHit sets the "yesterday_hit" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateYesterdayHit() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldYesterdayHit)
	return u
}

// AddYesterdayHit adds v to the "yesterday_hit" field.
func (u *Rent591HomeUpsert) AddYesterdayHit(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldYesterdayHit, v)
	return u
}

// SetIsVip sets the "is_vip" field.
func (u *Rent591HomeUpsert) SetIsVip(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldIsVip, v)
	return u
}

// UpdateIsVip sets the "is_vip" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateIsVip() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldIsVip)
	return u
}

// AddIsVip adds v to the "is_vip" field.
func (u *Rent591HomeUpsert) AddIsVip(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldIsVip, v)
	return u
}

// SetIsCombine sets the "is_combine" field.
func (u *Rent591HomeUpsert) SetIsCombine(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldIsCombine, v)
	return u
}

// UpdateIsCombine sets the "is_combine" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateIsCombine() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldIsCombine)
	return u
}

// AddIsCombine adds v to the "is_combine" field.
func (u *Rent591HomeUpsert) AddIsCombine(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldIsCombine, v)
	return u
}

// SetHurry sets the "hurry" field.
func (u *Rent591HomeUpsert) SetHurry(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldHurry, v)
	return u
}

// UpdateHurry sets the "hurry" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateHurry() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldHurry)
	return u
}

// AddHurry adds v to the "hurry" field.
func (u *Rent591HomeUpsert) AddHurry(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldHurry, v)
	return u
}

// SetIsSocial sets the "is_social" field.
func (u *Rent591HomeUpsert) SetIsSocial(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldIsSocial, v)
	return u
}

// UpdateIsSocial sets the "is_social" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateIsSocial() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldIsSocial)
	return u
}

// AddIsSocial adds v to the "is_social" field.
func (u *Rent591HomeUpsert) AddIsSocial(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldIsSocial, v)
	return u
}

// SetDiscountPriceStr sets the "discount_price_str" field.
func (u *Rent591HomeUpsert) SetDiscountPriceStr(v string) *Rent591HomeUpsert {
	u.Set(rent591home.FieldDiscountPriceStr, v)
	return u
}

// UpdateDiscountPriceStr sets the "discount_price_str" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateDiscountPriceStr() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldDiscountPriceStr)
	return u
}

// SetCasesID sets the "cases_id" field.
func (u *Rent591HomeUpsert) SetCasesID(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldCasesID, v)
	return u
}

// UpdateCasesID sets the "cases_id" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateCasesID() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldCasesID)
	return u
}

// AddCasesID adds v to the "cases_id" field.
func (u *Rent591HomeUpsert) AddCasesID(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldCasesID, v)
	return u
}

// SetIsVideo sets the "is_video" field.
func (u *Rent591HomeUpsert) SetIsVideo(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldIsVideo, v)
	return u
}

// UpdateIsVideo sets the "is_video" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateIsVideo() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldIsVideo)
	return u
}

// AddIsVideo adds v to the "is_video" field.
func (u *Rent591HomeUpsert) AddIsVideo(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldIsVideo, v)
	return u
}

// SetPreferred sets the "preferred" field.
func (u *Rent591HomeUpsert) SetPreferred(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldPreferred, v)
	return u
}

// UpdatePreferred sets the "preferred" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdatePreferred() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldPreferred)
	return u
}

// AddPreferred adds v to the "preferred" field.
func (u *Rent591HomeUpsert) AddPreferred(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldPreferred, v)
	return u
}

// SetCid sets the "cid" field.
func (u *Rent591HomeUpsert) SetCid(v int) *Rent591HomeUpsert {
	u.Set(rent591home.FieldCid, v)
	return u
}

// UpdateCid sets the "cid" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateCid() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldCid)
	return u
}

// AddCid adds v to the "cid" field.
func (u *Rent591HomeUpsert) AddCid(v int) *Rent591HomeUpsert {
	u.Add(rent591home.FieldCid, v)
	return u
}

// SetCreatedAt sets the "created_at" field.
func (u *Rent591HomeUpsert) SetCreatedAt(v time.Time) *Rent591HomeUpsert {
	u.Set(rent591home.FieldCreatedAt, v)
	return u
}

// UpdateCreatedAt sets the "created_at" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateCreatedAt() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldCreatedAt)
	return u
}

// SetUpdatedAt sets the "updated_at" field.
func (u *Rent591HomeUpsert) SetUpdatedAt(v time.Time) *Rent591HomeUpsert {
	u.Set(rent591home.FieldUpdatedAt, v)
	return u
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *Rent591HomeUpsert) UpdateUpdatedAt() *Rent591HomeUpsert {
	u.SetExcluded(rent591home.FieldUpdatedAt)
	return u
}

// UpdateNewValues updates the mutable fields using the new values that were set on create.
// Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//		).
//		Exec(ctx)
func (u *Rent591HomeUpsertOne) UpdateNewValues() *Rent591HomeUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//	    OnConflict(sql.ResolveWithIgnore()).
//	    Exec(ctx)
func (u *Rent591HomeUpsertOne) Ignore() *Rent591HomeUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *Rent591HomeUpsertOne) DoNothing() *Rent591HomeUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the Rent591HomeCreate.OnConflict
// documentation for more info.
func (u *Rent591HomeUpsertOne) Update(set func(*Rent591HomeUpsert)) *Rent591HomeUpsertOne {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&Rent591HomeUpsert{UpdateSet: update})
	}))
	return u
}

// SetTitle sets the "title" field.
func (u *Rent591HomeUpsertOne) SetTitle(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetTitle(v)
	})
}

// UpdateTitle sets the "title" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateTitle() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateTitle()
	})
}

// SetType sets the "type" field.
func (u *Rent591HomeUpsertOne) SetType(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetType(v)
	})
}

// AddType adds v to the "type" field.
func (u *Rent591HomeUpsertOne) AddType(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateType() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateType()
	})
}

// SetPostID sets the "post_id" field.
func (u *Rent591HomeUpsertOne) SetPostID(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPostID(v)
	})
}

// AddPostID adds v to the "post_id" field.
func (u *Rent591HomeUpsertOne) AddPostID(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPostID(v)
	})
}

// UpdatePostID sets the "post_id" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdatePostID() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePostID()
	})
}

// SetKindName sets the "kind_name" field.
func (u *Rent591HomeUpsertOne) SetKindName(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetKindName(v)
	})
}

// UpdateKindName sets the "kind_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateKindName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateKindName()
	})
}

// SetRoomStr sets the "room_str" field.
func (u *Rent591HomeUpsertOne) SetRoomStr(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRoomStr(v)
	})
}

// UpdateRoomStr sets the "room_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateRoomStr() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRoomStr()
	})
}

// SetFloorStr sets the "floor_str" field.
func (u *Rent591HomeUpsertOne) SetFloorStr(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetFloorStr(v)
	})
}

// UpdateFloorStr sets the "floor_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateFloorStr() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateFloorStr()
	})
}

// SetCommunity sets the "community" field.
func (u *Rent591HomeUpsertOne) SetCommunity(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCommunity(v)
	})
}

// UpdateCommunity sets the "community" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateCommunity() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCommunity()
	})
}

// SetPrice sets the "price" field.
func (u *Rent591HomeUpsertOne) SetPrice(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPrice(v)
	})
}

// AddPrice adds v to the "price" field.
func (u *Rent591HomeUpsertOne) AddPrice(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPrice(v)
	})
}

// UpdatePrice sets the "price" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdatePrice() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePrice()
	})
}

// SetPriceUnit sets the "price_unit" field.
func (u *Rent591HomeUpsertOne) SetPriceUnit(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPriceUnit(v)
	})
}

// UpdatePriceUnit sets the "price_unit" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdatePriceUnit() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePriceUnit()
	})
}

// SetPhotoList sets the "photo_list" field.
func (u *Rent591HomeUpsertOne) SetPhotoList(v []string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPhotoList(v)
	})
}

// UpdatePhotoList sets the "photo_list" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdatePhotoList() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePhotoList()
	})
}

// ClearPhotoList clears the value of the "photo_list" field.
func (u *Rent591HomeUpsertOne) ClearPhotoList() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.ClearPhotoList()
	})
}

// SetRegionName sets the "region_name" field.
func (u *Rent591HomeUpsertOne) SetRegionName(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRegionName(v)
	})
}

// UpdateRegionName sets the "region_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateRegionName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRegionName()
	})
}

// ClearRegionName clears the value of the "region_name" field.
func (u *Rent591HomeUpsertOne) ClearRegionName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.ClearRegionName()
	})
}

// SetSectionName sets the "section_name" field.
func (u *Rent591HomeUpsertOne) SetSectionName(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetSectionName(v)
	})
}

// UpdateSectionName sets the "section_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateSectionName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateSectionName()
	})
}

// SetStreetName sets the "street_name" field.
func (u *Rent591HomeUpsertOne) SetStreetName(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetStreetName(v)
	})
}

// UpdateStreetName sets the "street_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateStreetName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateStreetName()
	})
}

// SetLocation sets the "location" field.
func (u *Rent591HomeUpsertOne) SetLocation(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetLocation(v)
	})
}

// UpdateLocation sets the "location" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateLocation() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateLocation()
	})
}

// SetArea sets the "area" field.
func (u *Rent591HomeUpsertOne) SetArea(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetArea(v)
	})
}

// UpdateArea sets the "area" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateArea() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateArea()
	})
}

// SetRoleName sets the "role_name" field.
func (u *Rent591HomeUpsertOne) SetRoleName(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRoleName(v)
	})
}

// UpdateRoleName sets the "role_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateRoleName() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRoleName()
	})
}

// SetContact sets the "contact" field.
func (u *Rent591HomeUpsertOne) SetContact(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetContact(v)
	})
}

// UpdateContact sets the "contact" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateContact() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateContact()
	})
}

// SetRefreshTime sets the "refresh_time" field.
func (u *Rent591HomeUpsertOne) SetRefreshTime(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRefreshTime(v)
	})
}

// UpdateRefreshTime sets the "refresh_time" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateRefreshTime() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRefreshTime()
	})
}

// SetYesterdayHit sets the "yesterday_hit" field.
func (u *Rent591HomeUpsertOne) SetYesterdayHit(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetYesterdayHit(v)
	})
}

// AddYesterdayHit adds v to the "yesterday_hit" field.
func (u *Rent591HomeUpsertOne) AddYesterdayHit(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddYesterdayHit(v)
	})
}

// UpdateYesterdayHit sets the "yesterday_hit" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateYesterdayHit() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateYesterdayHit()
	})
}

// SetIsVip sets the "is_vip" field.
func (u *Rent591HomeUpsertOne) SetIsVip(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsVip(v)
	})
}

// AddIsVip adds v to the "is_vip" field.
func (u *Rent591HomeUpsertOne) AddIsVip(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsVip(v)
	})
}

// UpdateIsVip sets the "is_vip" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateIsVip() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsVip()
	})
}

// SetIsCombine sets the "is_combine" field.
func (u *Rent591HomeUpsertOne) SetIsCombine(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsCombine(v)
	})
}

// AddIsCombine adds v to the "is_combine" field.
func (u *Rent591HomeUpsertOne) AddIsCombine(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsCombine(v)
	})
}

// UpdateIsCombine sets the "is_combine" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateIsCombine() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsCombine()
	})
}

// SetHurry sets the "hurry" field.
func (u *Rent591HomeUpsertOne) SetHurry(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetHurry(v)
	})
}

// AddHurry adds v to the "hurry" field.
func (u *Rent591HomeUpsertOne) AddHurry(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddHurry(v)
	})
}

// UpdateHurry sets the "hurry" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateHurry() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateHurry()
	})
}

// SetIsSocial sets the "is_social" field.
func (u *Rent591HomeUpsertOne) SetIsSocial(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsSocial(v)
	})
}

// AddIsSocial adds v to the "is_social" field.
func (u *Rent591HomeUpsertOne) AddIsSocial(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsSocial(v)
	})
}

// UpdateIsSocial sets the "is_social" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateIsSocial() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsSocial()
	})
}

// SetDiscountPriceStr sets the "discount_price_str" field.
func (u *Rent591HomeUpsertOne) SetDiscountPriceStr(v string) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetDiscountPriceStr(v)
	})
}

// UpdateDiscountPriceStr sets the "discount_price_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateDiscountPriceStr() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateDiscountPriceStr()
	})
}

// SetCasesID sets the "cases_id" field.
func (u *Rent591HomeUpsertOne) SetCasesID(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCasesID(v)
	})
}

// AddCasesID adds v to the "cases_id" field.
func (u *Rent591HomeUpsertOne) AddCasesID(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddCasesID(v)
	})
}

// UpdateCasesID sets the "cases_id" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateCasesID() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCasesID()
	})
}

// SetIsVideo sets the "is_video" field.
func (u *Rent591HomeUpsertOne) SetIsVideo(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsVideo(v)
	})
}

// AddIsVideo adds v to the "is_video" field.
func (u *Rent591HomeUpsertOne) AddIsVideo(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsVideo(v)
	})
}

// UpdateIsVideo sets the "is_video" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateIsVideo() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsVideo()
	})
}

// SetPreferred sets the "preferred" field.
func (u *Rent591HomeUpsertOne) SetPreferred(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPreferred(v)
	})
}

// AddPreferred adds v to the "preferred" field.
func (u *Rent591HomeUpsertOne) AddPreferred(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPreferred(v)
	})
}

// UpdatePreferred sets the "preferred" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdatePreferred() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePreferred()
	})
}

// SetCid sets the "cid" field.
func (u *Rent591HomeUpsertOne) SetCid(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCid(v)
	})
}

// AddCid adds v to the "cid" field.
func (u *Rent591HomeUpsertOne) AddCid(v int) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddCid(v)
	})
}

// UpdateCid sets the "cid" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateCid() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCid()
	})
}

// SetCreatedAt sets the "created_at" field.
func (u *Rent591HomeUpsertOne) SetCreatedAt(v time.Time) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCreatedAt(v)
	})
}

// UpdateCreatedAt sets the "created_at" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateCreatedAt() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCreatedAt()
	})
}

// SetUpdatedAt sets the "updated_at" field.
func (u *Rent591HomeUpsertOne) SetUpdatedAt(v time.Time) *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *Rent591HomeUpsertOne) UpdateUpdatedAt() *Rent591HomeUpsertOne {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateUpdatedAt()
	})
}

// Exec executes the query.
func (u *Rent591HomeUpsertOne) Exec(ctx context.Context) error {
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for Rent591HomeCreate.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *Rent591HomeUpsertOne) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}

// Exec executes the UPSERT query and returns the inserted/updated ID.
func (u *Rent591HomeUpsertOne) ID(ctx context.Context) (id int, err error) {
	node, err := u.create.Save(ctx)
	if err != nil {
		return id, err
	}
	return node.ID, nil
}

// IDX is like ID, but panics if an error occurs.
func (u *Rent591HomeUpsertOne) IDX(ctx context.Context) int {
	id, err := u.ID(ctx)
	if err != nil {
		panic(err)
	}
	return id
}

// Rent591HomeCreateBulk is the builder for creating many Rent591Home entities in bulk.
type Rent591HomeCreateBulk struct {
	config
	builders []*Rent591HomeCreate
	conflict []sql.ConflictOption
}

// Save creates the Rent591Home entities in the database.
func (rcb *Rent591HomeCreateBulk) Save(ctx context.Context) ([]*Rent591Home, error) {
	specs := make([]*sqlgraph.CreateSpec, len(rcb.builders))
	nodes := make([]*Rent591Home, len(rcb.builders))
	mutators := make([]Mutator, len(rcb.builders))
	for i := range rcb.builders {
		func(i int, root context.Context) {
			builder := rcb.builders[i]
			builder.defaults()
			var mut Mutator = MutateFunc(func(ctx context.Context, m Mutation) (Value, error) {
				mutation, ok := m.(*Rent591HomeMutation)
				if !ok {
					return nil, fmt.Errorf("unexpected mutation type %T", m)
				}
				if err := builder.check(); err != nil {
					return nil, err
				}
				builder.mutation = mutation
				var err error
				nodes[i], specs[i] = builder.createSpec()
				if i < len(mutators)-1 {
					_, err = mutators[i+1].Mutate(root, rcb.builders[i+1].mutation)
				} else {
					spec := &sqlgraph.BatchCreateSpec{Nodes: specs}
					spec.OnConflict = rcb.conflict
					// Invoke the actual operation on the latest mutation in the chain.
					if err = sqlgraph.BatchCreate(ctx, rcb.driver, spec); err != nil {
						if sqlgraph.IsConstraintError(err) {
							err = &ConstraintError{msg: err.Error(), wrap: err}
						}
					}
				}
				if err != nil {
					return nil, err
				}
				mutation.id = &nodes[i].ID
				if specs[i].ID.Value != nil {
					id := specs[i].ID.Value.(int64)
					nodes[i].ID = int(id)
				}
				mutation.done = true
				return nodes[i], nil
			})
			for i := len(builder.hooks) - 1; i >= 0; i-- {
				mut = builder.hooks[i](mut)
			}
			mutators[i] = mut
		}(i, ctx)
	}
	if len(mutators) > 0 {
		if _, err := mutators[0].Mutate(ctx, rcb.builders[0].mutation); err != nil {
			return nil, err
		}
	}
	return nodes, nil
}

// SaveX is like Save, but panics if an error occurs.
func (rcb *Rent591HomeCreateBulk) SaveX(ctx context.Context) []*Rent591Home {
	v, err := rcb.Save(ctx)
	if err != nil {
		panic(err)
	}
	return v
}

// Exec executes the query.
func (rcb *Rent591HomeCreateBulk) Exec(ctx context.Context) error {
	_, err := rcb.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (rcb *Rent591HomeCreateBulk) ExecX(ctx context.Context) {
	if err := rcb.Exec(ctx); err != nil {
		panic(err)
	}
}

// OnConflict allows configuring the `ON CONFLICT` / `ON DUPLICATE KEY` clause
// of the `INSERT` statement. For example:
//
//	client.Rent591Home.CreateBulk(builders...).
//		OnConflict(
//			// Update the row with the new values
//			// the was proposed for insertion.
//			sql.ResolveWithNewValues(),
//		).
//		// Override some of the fields with custom
//		// update values.
//		Update(func(u *ent.Rent591HomeUpsert) {
//			SetTitle(v+v).
//		}).
//		Exec(ctx)
func (rcb *Rent591HomeCreateBulk) OnConflict(opts ...sql.ConflictOption) *Rent591HomeUpsertBulk {
	rcb.conflict = opts
	return &Rent591HomeUpsertBulk{
		create: rcb,
	}
}

// OnConflictColumns calls `OnConflict` and configures the columns
// as conflict target. Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//		OnConflict(sql.ConflictColumns(columns...)).
//		Exec(ctx)
func (rcb *Rent591HomeCreateBulk) OnConflictColumns(columns ...string) *Rent591HomeUpsertBulk {
	rcb.conflict = append(rcb.conflict, sql.ConflictColumns(columns...))
	return &Rent591HomeUpsertBulk{
		create: rcb,
	}
}

// Rent591HomeUpsertBulk is the builder for "upsert"-ing
// a bulk of Rent591Home nodes.
type Rent591HomeUpsertBulk struct {
	create *Rent591HomeCreateBulk
}

// UpdateNewValues updates the mutable fields using the new values that
// were set on create. Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//		OnConflict(
//			sql.ResolveWithNewValues(),
//		).
//		Exec(ctx)
func (u *Rent591HomeUpsertBulk) UpdateNewValues() *Rent591HomeUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithNewValues())
	return u
}

// Ignore sets each column to itself in case of conflict.
// Using this option is equivalent to using:
//
//	client.Rent591Home.Create().
//		OnConflict(sql.ResolveWithIgnore()).
//		Exec(ctx)
func (u *Rent591HomeUpsertBulk) Ignore() *Rent591HomeUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWithIgnore())
	return u
}

// DoNothing configures the conflict_action to `DO NOTHING`.
// Supported only by SQLite and PostgreSQL.
func (u *Rent591HomeUpsertBulk) DoNothing() *Rent591HomeUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.DoNothing())
	return u
}

// Update allows overriding fields `UPDATE` values. See the Rent591HomeCreateBulk.OnConflict
// documentation for more info.
func (u *Rent591HomeUpsertBulk) Update(set func(*Rent591HomeUpsert)) *Rent591HomeUpsertBulk {
	u.create.conflict = append(u.create.conflict, sql.ResolveWith(func(update *sql.UpdateSet) {
		set(&Rent591HomeUpsert{UpdateSet: update})
	}))
	return u
}

// SetTitle sets the "title" field.
func (u *Rent591HomeUpsertBulk) SetTitle(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetTitle(v)
	})
}

// UpdateTitle sets the "title" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateTitle() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateTitle()
	})
}

// SetType sets the "type" field.
func (u *Rent591HomeUpsertBulk) SetType(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetType(v)
	})
}

// AddType adds v to the "type" field.
func (u *Rent591HomeUpsertBulk) AddType(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddType(v)
	})
}

// UpdateType sets the "type" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateType() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateType()
	})
}

// SetPostID sets the "post_id" field.
func (u *Rent591HomeUpsertBulk) SetPostID(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPostID(v)
	})
}

// AddPostID adds v to the "post_id" field.
func (u *Rent591HomeUpsertBulk) AddPostID(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPostID(v)
	})
}

// UpdatePostID sets the "post_id" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdatePostID() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePostID()
	})
}

// SetKindName sets the "kind_name" field.
func (u *Rent591HomeUpsertBulk) SetKindName(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetKindName(v)
	})
}

// UpdateKindName sets the "kind_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateKindName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateKindName()
	})
}

// SetRoomStr sets the "room_str" field.
func (u *Rent591HomeUpsertBulk) SetRoomStr(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRoomStr(v)
	})
}

// UpdateRoomStr sets the "room_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateRoomStr() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRoomStr()
	})
}

// SetFloorStr sets the "floor_str" field.
func (u *Rent591HomeUpsertBulk) SetFloorStr(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetFloorStr(v)
	})
}

// UpdateFloorStr sets the "floor_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateFloorStr() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateFloorStr()
	})
}

// SetCommunity sets the "community" field.
func (u *Rent591HomeUpsertBulk) SetCommunity(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCommunity(v)
	})
}

// UpdateCommunity sets the "community" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateCommunity() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCommunity()
	})
}

// SetPrice sets the "price" field.
func (u *Rent591HomeUpsertBulk) SetPrice(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPrice(v)
	})
}

// AddPrice adds v to the "price" field.
func (u *Rent591HomeUpsertBulk) AddPrice(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPrice(v)
	})
}

// UpdatePrice sets the "price" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdatePrice() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePrice()
	})
}

// SetPriceUnit sets the "price_unit" field.
func (u *Rent591HomeUpsertBulk) SetPriceUnit(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPriceUnit(v)
	})
}

// UpdatePriceUnit sets the "price_unit" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdatePriceUnit() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePriceUnit()
	})
}

// SetPhotoList sets the "photo_list" field.
func (u *Rent591HomeUpsertBulk) SetPhotoList(v []string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPhotoList(v)
	})
}

// UpdatePhotoList sets the "photo_list" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdatePhotoList() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePhotoList()
	})
}

// ClearPhotoList clears the value of the "photo_list" field.
func (u *Rent591HomeUpsertBulk) ClearPhotoList() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.ClearPhotoList()
	})
}

// SetRegionName sets the "region_name" field.
func (u *Rent591HomeUpsertBulk) SetRegionName(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRegionName(v)
	})
}

// UpdateRegionName sets the "region_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateRegionName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRegionName()
	})
}

// ClearRegionName clears the value of the "region_name" field.
func (u *Rent591HomeUpsertBulk) ClearRegionName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.ClearRegionName()
	})
}

// SetSectionName sets the "section_name" field.
func (u *Rent591HomeUpsertBulk) SetSectionName(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetSectionName(v)
	})
}

// UpdateSectionName sets the "section_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateSectionName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateSectionName()
	})
}

// SetStreetName sets the "street_name" field.
func (u *Rent591HomeUpsertBulk) SetStreetName(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetStreetName(v)
	})
}

// UpdateStreetName sets the "street_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateStreetName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateStreetName()
	})
}

// SetLocation sets the "location" field.
func (u *Rent591HomeUpsertBulk) SetLocation(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetLocation(v)
	})
}

// UpdateLocation sets the "location" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateLocation() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateLocation()
	})
}

// SetArea sets the "area" field.
func (u *Rent591HomeUpsertBulk) SetArea(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetArea(v)
	})
}

// UpdateArea sets the "area" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateArea() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateArea()
	})
}

// SetRoleName sets the "role_name" field.
func (u *Rent591HomeUpsertBulk) SetRoleName(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRoleName(v)
	})
}

// UpdateRoleName sets the "role_name" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateRoleName() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRoleName()
	})
}

// SetContact sets the "contact" field.
func (u *Rent591HomeUpsertBulk) SetContact(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetContact(v)
	})
}

// UpdateContact sets the "contact" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateContact() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateContact()
	})
}

// SetRefreshTime sets the "refresh_time" field.
func (u *Rent591HomeUpsertBulk) SetRefreshTime(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetRefreshTime(v)
	})
}

// UpdateRefreshTime sets the "refresh_time" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateRefreshTime() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateRefreshTime()
	})
}

// SetYesterdayHit sets the "yesterday_hit" field.
func (u *Rent591HomeUpsertBulk) SetYesterdayHit(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetYesterdayHit(v)
	})
}

// AddYesterdayHit adds v to the "yesterday_hit" field.
func (u *Rent591HomeUpsertBulk) AddYesterdayHit(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddYesterdayHit(v)
	})
}

// UpdateYesterdayHit sets the "yesterday_hit" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateYesterdayHit() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateYesterdayHit()
	})
}

// SetIsVip sets the "is_vip" field.
func (u *Rent591HomeUpsertBulk) SetIsVip(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsVip(v)
	})
}

// AddIsVip adds v to the "is_vip" field.
func (u *Rent591HomeUpsertBulk) AddIsVip(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsVip(v)
	})
}

// UpdateIsVip sets the "is_vip" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateIsVip() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsVip()
	})
}

// SetIsCombine sets the "is_combine" field.
func (u *Rent591HomeUpsertBulk) SetIsCombine(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsCombine(v)
	})
}

// AddIsCombine adds v to the "is_combine" field.
func (u *Rent591HomeUpsertBulk) AddIsCombine(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsCombine(v)
	})
}

// UpdateIsCombine sets the "is_combine" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateIsCombine() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsCombine()
	})
}

// SetHurry sets the "hurry" field.
func (u *Rent591HomeUpsertBulk) SetHurry(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetHurry(v)
	})
}

// AddHurry adds v to the "hurry" field.
func (u *Rent591HomeUpsertBulk) AddHurry(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddHurry(v)
	})
}

// UpdateHurry sets the "hurry" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateHurry() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateHurry()
	})
}

// SetIsSocial sets the "is_social" field.
func (u *Rent591HomeUpsertBulk) SetIsSocial(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsSocial(v)
	})
}

// AddIsSocial adds v to the "is_social" field.
func (u *Rent591HomeUpsertBulk) AddIsSocial(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsSocial(v)
	})
}

// UpdateIsSocial sets the "is_social" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateIsSocial() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsSocial()
	})
}

// SetDiscountPriceStr sets the "discount_price_str" field.
func (u *Rent591HomeUpsertBulk) SetDiscountPriceStr(v string) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetDiscountPriceStr(v)
	})
}

// UpdateDiscountPriceStr sets the "discount_price_str" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateDiscountPriceStr() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateDiscountPriceStr()
	})
}

// SetCasesID sets the "cases_id" field.
func (u *Rent591HomeUpsertBulk) SetCasesID(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCasesID(v)
	})
}

// AddCasesID adds v to the "cases_id" field.
func (u *Rent591HomeUpsertBulk) AddCasesID(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddCasesID(v)
	})
}

// UpdateCasesID sets the "cases_id" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateCasesID() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCasesID()
	})
}

// SetIsVideo sets the "is_video" field.
func (u *Rent591HomeUpsertBulk) SetIsVideo(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetIsVideo(v)
	})
}

// AddIsVideo adds v to the "is_video" field.
func (u *Rent591HomeUpsertBulk) AddIsVideo(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddIsVideo(v)
	})
}

// UpdateIsVideo sets the "is_video" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateIsVideo() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateIsVideo()
	})
}

// SetPreferred sets the "preferred" field.
func (u *Rent591HomeUpsertBulk) SetPreferred(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetPreferred(v)
	})
}

// AddPreferred adds v to the "preferred" field.
func (u *Rent591HomeUpsertBulk) AddPreferred(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddPreferred(v)
	})
}

// UpdatePreferred sets the "preferred" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdatePreferred() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdatePreferred()
	})
}

// SetCid sets the "cid" field.
func (u *Rent591HomeUpsertBulk) SetCid(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCid(v)
	})
}

// AddCid adds v to the "cid" field.
func (u *Rent591HomeUpsertBulk) AddCid(v int) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.AddCid(v)
	})
}

// UpdateCid sets the "cid" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateCid() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCid()
	})
}

// SetCreatedAt sets the "created_at" field.
func (u *Rent591HomeUpsertBulk) SetCreatedAt(v time.Time) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetCreatedAt(v)
	})
}

// UpdateCreatedAt sets the "created_at" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateCreatedAt() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateCreatedAt()
	})
}

// SetUpdatedAt sets the "updated_at" field.
func (u *Rent591HomeUpsertBulk) SetUpdatedAt(v time.Time) *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.SetUpdatedAt(v)
	})
}

// UpdateUpdatedAt sets the "updated_at" field to the value that was provided on create.
func (u *Rent591HomeUpsertBulk) UpdateUpdatedAt() *Rent591HomeUpsertBulk {
	return u.Update(func(s *Rent591HomeUpsert) {
		s.UpdateUpdatedAt()
	})
}

// Exec executes the query.
func (u *Rent591HomeUpsertBulk) Exec(ctx context.Context) error {
	for i, b := range u.create.builders {
		if len(b.conflict) != 0 {
			return fmt.Errorf("ent: OnConflict was set for builder %d. Set it on the Rent591HomeCreateBulk instead", i)
		}
	}
	if len(u.create.conflict) == 0 {
		return errors.New("ent: missing options for Rent591HomeCreateBulk.OnConflict")
	}
	return u.create.Exec(ctx)
}

// ExecX is like Exec, but panics if an error occurs.
func (u *Rent591HomeUpsertBulk) ExecX(ctx context.Context) {
	if err := u.create.Exec(ctx); err != nil {
		panic(err)
	}
}
